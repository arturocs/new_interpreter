<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="710" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="693.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="693.00"> </text><svg id="frames" x="10" width="1180" total_samples="61"><g><title>&lt;combine::parser::FirstMode as combine::parser::ParseMode&gt;::parse::&lt;(combine::parser::choice::Optional&lt;combine::parser::combinator::Map&lt;combine::parser::range::RecognizeWithValue&lt;combine::parser::repeat::SepEndBy1&lt;toml_edit::array::Array, toml_edit::parser::array::array_value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, combine::parser::token::Token&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;&gt;, &lt;toml_edit::parser::array::array_values&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt;&gt;, toml_edit::parser::trivia::ws_comment_newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;), combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; (1 samples, 1.64%)</title><rect x="0.0000%" y="613" width="1.6393%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="623.50"></text></g><g><title>_int_malloc (1 samples, 1.64%)</title><rect x="1.6393%" y="613" width="1.6393%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="1.8893%" y="623.50"></text></g><g><title>[[heap]] (3 samples, 4.92%)</title><rect x="0.0000%" y="629" width="4.9180%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="3"/><text x="0.2500%" y="639.50">[[heap..</text></g><g><title>std::sys::unix::fs::cstr (1 samples, 1.64%)</title><rect x="3.2787%" y="613" width="1.6393%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="3.5287%" y="623.50"></text></g><g><title>std::ffi::c_str::CString::new (1 samples, 1.64%)</title><rect x="3.2787%" y="597" width="1.6393%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="3.5287%" y="607.50"></text></g><g><title>&lt;&amp;[u8] as std::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 1.64%)</title><rect x="3.2787%" y="581" width="1.6393%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="3.5287%" y="591.50"></text></g><g><title>std::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 1.64%)</title><rect x="3.2787%" y="565" width="1.6393%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="3.5287%" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 1.64%)</title><rect x="3.2787%" y="549" width="1.6393%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="3.5287%" y="559.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 1.64%)</title><rect x="3.2787%" y="533" width="1.6393%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="3.5287%" y="543.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 1.64%)</title><rect x="4.9180%" y="469" width="1.6393%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="1"/><text x="5.1680%" y="479.50"></text></g><g><title>std::sys::unix::fs::File::read (1 samples, 1.64%)</title><rect x="4.9180%" y="453" width="1.6393%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="1"/><text x="5.1680%" y="463.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (1 samples, 1.64%)</title><rect x="4.9180%" y="437" width="1.6393%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="5.1680%" y="447.50"></text></g><g><title>__libc_read (1 samples, 1.64%)</title><rect x="4.9180%" y="421" width="1.6393%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="1"/><text x="5.1680%" y="431.50"></text></g><g><title>&lt;cargo::sources::registry::RegistrySource&gt;::get_pkg (2 samples, 3.28%)</title><rect x="4.9180%" y="613" width="3.2787%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="2"/><text x="5.1680%" y="623.50">&lt;ca..</text></g><g><title>&lt;cargo::sources::path::PathSource as cargo::core::source::Source&gt;::update (2 samples, 3.28%)</title><rect x="4.9180%" y="597" width="3.2787%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="2"/><text x="5.1680%" y="607.50">&lt;ca..</text></g><g><title>&lt;cargo::sources::path::PathSource&gt;::read_packages (2 samples, 3.28%)</title><rect x="4.9180%" y="581" width="3.2787%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="2"/><text x="5.1680%" y="591.50">&lt;ca..</text></g><g><title>cargo::ops::cargo_read_manifest::read_package (2 samples, 3.28%)</title><rect x="4.9180%" y="565" width="3.2787%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="2"/><text x="5.1680%" y="575.50">car..</text></g><g><title>cargo::util::toml::read_manifest (2 samples, 3.28%)</title><rect x="4.9180%" y="549" width="3.2787%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="2"/><text x="5.1680%" y="559.50">car..</text></g><g><title>cargo_util::paths::read (2 samples, 3.28%)</title><rect x="4.9180%" y="533" width="3.2787%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="2"/><text x="5.1680%" y="543.50">car..</text></g><g><title>std::fs::read::inner (2 samples, 3.28%)</title><rect x="4.9180%" y="517" width="3.2787%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="2"/><text x="5.1680%" y="527.50">std..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_end (2 samples, 3.28%)</title><rect x="4.9180%" y="501" width="3.2787%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="2"/><text x="5.1680%" y="511.50">&lt;st..</text></g><g><title>std::io::default_read_to_end (2 samples, 3.28%)</title><rect x="4.9180%" y="485" width="3.2787%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="2"/><text x="5.1680%" y="495.50">std..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (1 samples, 1.64%)</title><rect x="6.5574%" y="469" width="1.6393%" height="15" fill="rgb(221,5,38)" fg:x="4" fg:w="1"/><text x="6.8074%" y="479.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (1 samples, 1.64%)</title><rect x="6.5574%" y="453" width="1.6393%" height="15" fill="rgb(247,18,42)" fg:x="4" fg:w="1"/><text x="6.8074%" y="463.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (1 samples, 1.64%)</title><rect x="6.5574%" y="437" width="1.6393%" height="15" fill="rgb(241,131,45)" fg:x="4" fg:w="1"/><text x="6.8074%" y="447.50"></text></g><g><title>__libc_read (1 samples, 1.64%)</title><rect x="6.5574%" y="421" width="1.6393%" height="15" fill="rgb(249,31,29)" fg:x="4" fg:w="1"/><text x="6.8074%" y="431.50"></text></g><g><title>&lt;combine::parser::FirstMode as combine::parser::ParseMode&gt;::parse::&lt;combine::parser::sequence::With&lt;toml_edit::parser::document::parse_ws&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, combine::parser::choice::Choice&lt;(combine::parser::token::Eof&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, combine::parser::repeat::SkipMany1&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;, combine::parser::sequence::Skip&lt;combine::parser::sequence::Then&lt;combine::parser::combinator::LookAhead&lt;combine::parser::token::Any&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;, &lt;toml_edit::parser::TomlParser&gt;::parse::{closure#0}&gt;, toml_edit::parser::document::parse_ws&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;&gt;)&gt;&gt;, combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; (1 samples, 1.64%)</title><rect x="8.1967%" y="613" width="1.6393%" height="15" fill="rgb(225,111,53)" fg:x="5" fg:w="1"/><text x="8.4467%" y="623.50"></text></g><g><title>&lt;combine::parser::repeat::Sink as core::iter::traits::collect::Extend&lt;()&gt;&gt;::extend::&lt;&amp;mut combine::parser::repeat::Iter&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;, &amp;mut combine::parser::combinator::Ignore&lt;&amp;mut combine::parser::sequence::Skip&lt;combine::parser::sequence::Then&lt;combine::parser::combinator::LookAhead&lt;combine::parser::token::Any&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;, &lt;toml_edit::parser::TomlParser&gt;::parse::{closure#0}&gt;, toml_edit::parser::document::parse_ws&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;&gt;, &amp;mut combine::parser::sequence::PartialState2&lt;combine::parser::sequence::SequenceState&lt;(), ((), core::option::Option&lt;(bool, &lt;toml_edit::parser::TomlParser&gt;::parse::{closure#0}::Dispatch&lt;toml_edit::parser::document::parse_comment&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::table::table&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::document::parse_newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::document::keyval&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;)&gt;, core::option::Option&lt;&lt;toml_edit::parser::TomlParser&gt;::parse::{closure#0}::Dispatch&lt;(), (), (), ()&gt;&gt;)&gt;, combine::parser::sequence::SequenceState&lt;(), ()&gt;&gt;, combine::parser::FirstMode&gt;&gt; (1 samples, 1.64%)</title><rect x="8.1967%" y="597" width="1.6393%" height="15" fill="rgb(238,160,17)" fg:x="5" fg:w="1"/><text x="8.4467%" y="607.50"></text></g><g><title>_RINvYINtNtNtCs287N82ZWi4E_7combine6parser10combinator6IgnoreQINtNtB8_8sequence4SkipINtB10_4ThenINtB6_9LookAheadINtNtB8_5token3AnyINtNtNtBa_6stream4easy6StreamINtNtB28_8position6StreamRShNtB2z_15IndexPositionerEEEENCNvMNtNtCs1pxsnI9ZQZP_9toml_edit6parser8documentNtB3w_10TomlParser5parse0EINtB3u_8parse_wsB23_EEEINtB8_6ParserB23_E10parse_modeNtB8_9FirstModeEB3y_.llvm.1750309724704944180 (1 samples, 1.64%)</title><rect x="8.1967%" y="581" width="1.6393%" height="15" fill="rgb(214,148,48)" fg:x="5" fg:w="1"/><text x="8.4467%" y="591.50"></text></g><g><title>&lt;&lt;toml_edit::parser::TomlParser&gt;::parse::{closure#0}::Dispatch&lt;toml_edit::parser::document::parse_comment&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::table::table&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::document::parse_newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::document::keyval&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode::&lt;combine::parser::FirstMode&gt; (1 samples, 1.64%)</title><rect x="8.1967%" y="565" width="1.6393%" height="15" fill="rgb(232,36,49)" fg:x="5" fg:w="1"/><text x="8.4467%" y="575.50"></text></g><g><title>&lt;combine::parser::combinator::AndThen&lt;toml_edit::parser::document::parse_keyval&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::parser::document::keyval&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl::&lt;combine::parser::FirstMode&gt; (1 samples, 1.64%)</title><rect x="8.1967%" y="549" width="1.6393%" height="15" fill="rgb(209,103,24)" fg:x="5" fg:w="1"/><text x="8.4467%" y="559.50"></text></g><g><title>&lt;combine::parser::combinator::AndThen&lt;(toml_edit::parser::key::key&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, combine::parser::token::Token&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, (toml_edit::parser::trivia::ws&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::value::value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::trivia::line_trailing&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;)), &lt;toml_edit::parser::document::parse_keyval&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl::&lt;combine::parser::FirstMode&gt; (1 samples, 1.64%)</title><rect x="8.1967%" y="533" width="1.6393%" height="15" fill="rgb(229,88,8)" fg:x="5" fg:w="1"/><text x="8.4467%" y="543.50"></text></g><g><title>_RINvXsc_NtNtCs287N82ZWi4E_7combine6parser8sequenceTINtNtNtCs1pxsnI9ZQZP_9toml_edit6parser3key3keyINtNtNtBa_6stream4easy6StreamINtNtB1C_8position6StreamRShNtB23_15IndexPositionerEEEINtNtB8_5token5TokenB1x_ETINtNtBS_6trivia2wsB1x_EINtNtBS_5value5valueB1x_EINtB3l_13line_trailingB1x_EEEINtB8_6ParserB1x_E15parse_mode_implNtB8_9FirstModeEBU_.llvm.1750309724704944180 (1 samples, 1.64%)</title><rect x="8.1967%" y="517" width="1.6393%" height="15" fill="rgb(213,181,19)" fg:x="5" fg:w="1"/><text x="8.4467%" y="527.50"></text></g><g><title>&lt;combine::parser::combinator::AndThen&lt;combine::parser::range::RecognizeWithValue&lt;combine::parser::sequence::Then&lt;combine::parser::combinator::LookAhead&lt;combine::parser::token::Any&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;, &lt;toml_edit::parser::value::value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt;&gt;, &lt;toml_edit::parser::value::value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#1}&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl::&lt;combine::parser::FirstMode&gt; (1 samples, 1.64%)</title><rect x="8.1967%" y="501" width="1.6393%" height="15" fill="rgb(254,191,54)" fg:x="5" fg:w="1"/><text x="8.4467%" y="511.50"></text></g><g><title>&lt;combine::parser::FirstMode as combine::parser::ParseMode&gt;::parse::&lt;combine::parser::sequence::Then&lt;combine::parser::combinator::LookAhead&lt;combine::parser::token::Any&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;, &lt;toml_edit::parser::value::value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt;, combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; (1 samples, 1.64%)</title><rect x="8.1967%" y="485" width="1.6393%" height="15" fill="rgb(241,83,37)" fg:x="5" fg:w="1"/><text x="8.4467%" y="495.50"></text></g><g><title>&lt;&lt;toml_edit::parser::value::value&lt;_&gt; as combine::parser::Parser&lt;_&gt;&gt;::parse_mode_impl::{closure#0}::Dispatch&lt;combine::parser::combinator::Map&lt;toml_edit::parser::strings::string&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::parser::value::value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}::{closure#0}&gt;, combine::parser::combinator::Map&lt;toml_edit::parser::array::array&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::value::Value::Array&gt;, combine::parser::combinator::Map&lt;toml_edit::parser::inline_table::inline_table&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::value::Value::InlineTable&gt;, combine::parser::choice::Choice&lt;(combine::parser::combinator::Map&lt;toml_edit::parser::datetime::date_time&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::value::Value as core::convert::From&lt;toml_edit::datetime::Datetime&gt;&gt;::from&gt;, combine::parser::combinator::Map&lt;toml_edit::parser::numbers::float&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::value::Value as core::convert::From&lt;f64&gt;&gt;::from&gt;, combine::parser::combinator::Map&lt;toml_edit::parser::numbers::integer&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::value::Value as core::convert::From&lt;i64&gt;&gt;::from&gt;)&gt;, combine::parser::error::Expected&lt;combine::parser::combinator::Map&lt;toml_edit::parser::numbers::true_&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::value::Value as core::convert::From&lt;bool&gt;&gt;::from&gt;, &amp;str&gt;, combine::parser::error::Expected&lt;combine::parser::combinator::Map&lt;toml_edit::parser::numbers::false_&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::value::Value as core::convert::From&lt;bool&gt;&gt;::from&gt;, &amp;str&gt;, combine::parser::error::Expected&lt;combine::parser::combinator::Map&lt;toml_edit::parser::numbers::inf&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::value::Value as core::convert::From&lt;f64&gt;&gt;::from&gt;, &amp;str&gt;, combine::parser::error::Expected&lt;combine::parser::combinator::Map&lt;toml_edit::parser::numbers::nan&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::value::Value as core::convert::From&lt;f64&gt;&gt;::from&gt;, &amp;str&gt;, combine::parser::error::Expected&lt;combine::parser::combinator::Map&lt;toml_edit::parser::numbers::nan&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::value::Value as core::convert::From&lt;f64&gt;&gt;::from&gt;, &amp;str&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode::&lt;combine::parser::FirstMode&gt; (1 samples, 1.64%)</title><rect x="8.1967%" y="469" width="1.6393%" height="15" fill="rgb(233,36,39)" fg:x="5" fg:w="1"/><text x="8.4467%" y="479.50"></text></g><g><title>_RINvXNtNtCs1pxsnI9ZQZP_9toml_edit6parser5arrayINtB3_5arrayINtNtNtCs287N82ZWi4E_7combine6stream4easy6StreamINtNtBZ_8position6StreamRShNtB1J_15IndexPositionerEEEINtNtB11_6parser6ParserBU_E15parse_mode_implNtB2A_9FirstModeEB7_.llvm.1750309724704944180 (1 samples, 1.64%)</title><rect x="8.1967%" y="453" width="1.6393%" height="15" fill="rgb(226,3,54)" fg:x="5" fg:w="1"/><text x="8.4467%" y="463.50"></text></g><g><title>&lt;combine::parser::combinator::AndThen&lt;(combine::parser::choice::Optional&lt;combine::parser::combinator::Map&lt;combine::parser::range::RecognizeWithValue&lt;combine::parser::repeat::SepEndBy1&lt;toml_edit::array::Array, toml_edit::parser::array::array_value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, combine::parser::token::Token&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;&gt;, &lt;toml_edit::parser::array::array_values&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt;&gt;, toml_edit::parser::trivia::ws_comment_newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;), &lt;toml_edit::parser::array::array_values&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#1}&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl::&lt;combine::parser::FirstMode&gt; (1 samples, 1.64%)</title><rect x="8.1967%" y="437" width="1.6393%" height="15" fill="rgb(245,192,40)" fg:x="5" fg:w="1"/><text x="8.4467%" y="447.50"></text></g><g><title>&lt;combine::parser::FirstMode as combine::parser::ParseMode&gt;::parse::&lt;(combine::parser::choice::Optional&lt;combine::parser::combinator::Map&lt;combine::parser::range::RecognizeWithValue&lt;combine::parser::repeat::SepEndBy1&lt;toml_edit::array::Array, toml_edit::parser::array::array_value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, combine::parser::token::Token&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;&gt;, &lt;toml_edit::parser::array::array_values&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt;&gt;, toml_edit::parser::trivia::ws_comment_newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;), combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; (1 samples, 1.64%)</title><rect x="8.1967%" y="421" width="1.6393%" height="15" fill="rgb(238,167,29)" fg:x="5" fg:w="1"/><text x="8.4467%" y="431.50"></text></g><g><title>&lt;combine::parser::combinator::AndThen&lt;combine::parser::combinator::Try&lt;(toml_edit::parser::trivia::ws_comment_newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::value::value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::trivia::ws_comment_newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;)&gt;, &lt;toml_edit::parser::array::array_value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl::&lt;combine::parser::FirstMode&gt; (1 samples, 1.64%)</title><rect x="8.1967%" y="405" width="1.6393%" height="15" fill="rgb(232,182,51)" fg:x="5" fg:w="1"/><text x="8.4467%" y="415.50"></text></g><g><title>&lt;combine::parser::combinator::AndThen&lt;toml_edit::parser::document::parse_keyval&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::parser::document::keyval&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl::&lt;combine::parser::FirstMode&gt; (1 samples, 1.64%)</title><rect x="9.8361%" y="613" width="1.6393%" height="15" fill="rgb(231,60,39)" fg:x="6" fg:w="1"/><text x="10.0861%" y="623.50"></text></g><g><title>&lt;combine::parser::combinator::AndThen&lt;(toml_edit::parser::key::key&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, combine::parser::token::Token&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, (toml_edit::parser::trivia::ws&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::value::value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::trivia::line_trailing&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;)), &lt;toml_edit::parser::document::parse_keyval&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl::&lt;combine::parser::FirstMode&gt; (1 samples, 1.64%)</title><rect x="9.8361%" y="597" width="1.6393%" height="15" fill="rgb(208,69,12)" fg:x="6" fg:w="1"/><text x="10.0861%" y="607.50"></text></g><g><title>_RINvXsc_NtNtCs287N82ZWi4E_7combine6parser8sequenceTINtNtNtCs1pxsnI9ZQZP_9toml_edit6parser3key3keyINtNtNtBa_6stream4easy6StreamINtNtB1C_8position6StreamRShNtB23_15IndexPositionerEEEINtNtB8_5token5TokenB1x_ETINtNtBS_6trivia2wsB1x_EINtNtBS_5value5valueB1x_EINtB3l_13line_trailingB1x_EEEINtB8_6ParserB1x_E15parse_mode_implNtB8_9FirstModeEBU_.llvm.1750309724704944180 (1 samples, 1.64%)</title><rect x="9.8361%" y="581" width="1.6393%" height="15" fill="rgb(235,93,37)" fg:x="6" fg:w="1"/><text x="10.0861%" y="591.50"></text></g><g><title>&lt;combine::parser::combinator::AndThen&lt;combine::parser::range::RecognizeWithValue&lt;combine::parser::sequence::Then&lt;combine::parser::combinator::LookAhead&lt;combine::parser::token::Any&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;, &lt;toml_edit::parser::value::value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt;&gt;, &lt;toml_edit::parser::value::value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#1}&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl::&lt;combine::parser::FirstMode&gt; (1 samples, 1.64%)</title><rect x="9.8361%" y="565" width="1.6393%" height="15" fill="rgb(213,116,39)" fg:x="6" fg:w="1"/><text x="10.0861%" y="575.50"></text></g><g><title>&lt;combine::parser::FirstMode as combine::parser::ParseMode&gt;::parse::&lt;combine::parser::sequence::Then&lt;combine::parser::combinator::LookAhead&lt;combine::parser::token::Any&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;, &lt;toml_edit::parser::value::value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt;, combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; (1 samples, 1.64%)</title><rect x="9.8361%" y="549" width="1.6393%" height="15" fill="rgb(222,207,29)" fg:x="6" fg:w="1"/><text x="10.0861%" y="559.50"></text></g><g><title>&lt;&lt;toml_edit::parser::value::value&lt;_&gt; as combine::parser::Parser&lt;_&gt;&gt;::parse_mode_impl::{closure#0}::Dispatch&lt;combine::parser::combinator::Map&lt;toml_edit::parser::strings::string&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::parser::value::value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}::{closure#0}&gt;, combine::parser::combinator::Map&lt;toml_edit::parser::array::array&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::value::Value::Array&gt;, combine::parser::combinator::Map&lt;toml_edit::parser::inline_table::inline_table&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::value::Value::InlineTable&gt;, combine::parser::choice::Choice&lt;(combine::parser::combinator::Map&lt;toml_edit::parser::datetime::date_time&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::value::Value as core::convert::From&lt;toml_edit::datetime::Datetime&gt;&gt;::from&gt;, combine::parser::combinator::Map&lt;toml_edit::parser::numbers::float&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::value::Value as core::convert::From&lt;f64&gt;&gt;::from&gt;, combine::parser::combinator::Map&lt;toml_edit::parser::numbers::integer&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::value::Value as core::convert::From&lt;i64&gt;&gt;::from&gt;)&gt;, combine::parser::error::Expected&lt;combine::parser::combinator::Map&lt;toml_edit::parser::numbers::true_&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::value::Value as core::convert::From&lt;bool&gt;&gt;::from&gt;, &amp;str&gt;, combine::parser::error::Expected&lt;combine::parser::combinator::Map&lt;toml_edit::parser::numbers::false_&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::value::Value as core::convert::From&lt;bool&gt;&gt;::from&gt;, &amp;str&gt;, combine::parser::error::Expected&lt;combine::parser::combinator::Map&lt;toml_edit::parser::numbers::inf&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::value::Value as core::convert::From&lt;f64&gt;&gt;::from&gt;, &amp;str&gt;, combine::parser::error::Expected&lt;combine::parser::combinator::Map&lt;toml_edit::parser::numbers::nan&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::value::Value as core::convert::From&lt;f64&gt;&gt;::from&gt;, &amp;str&gt;, combine::parser::error::Expected&lt;combine::parser::combinator::Map&lt;toml_edit::parser::numbers::nan&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::value::Value as core::convert::From&lt;f64&gt;&gt;::from&gt;, &amp;str&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode::&lt;combine::parser::FirstMode&gt; (1 samples, 1.64%)</title><rect x="9.8361%" y="533" width="1.6393%" height="15" fill="rgb(206,96,30)" fg:x="6" fg:w="1"/><text x="10.0861%" y="543.50"></text></g><g><title>_RINvXNtNtCs1pxsnI9ZQZP_9toml_edit6parser5arrayINtB3_5arrayINtNtNtCs287N82ZWi4E_7combine6stream4easy6StreamINtNtBZ_8position6StreamRShNtB1J_15IndexPositionerEEEINtNtB11_6parser6ParserBU_E15parse_mode_implNtB2A_9FirstModeEB7_.llvm.1750309724704944180 (1 samples, 1.64%)</title><rect x="9.8361%" y="517" width="1.6393%" height="15" fill="rgb(218,138,4)" fg:x="6" fg:w="1"/><text x="10.0861%" y="527.50"></text></g><g><title>&lt;combine::parser::combinator::AndThen&lt;(combine::parser::choice::Optional&lt;combine::parser::combinator::Map&lt;combine::parser::range::RecognizeWithValue&lt;combine::parser::repeat::SepEndBy1&lt;toml_edit::array::Array, toml_edit::parser::array::array_value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, combine::parser::token::Token&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;&gt;, &lt;toml_edit::parser::array::array_values&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt;&gt;, toml_edit::parser::trivia::ws_comment_newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;), &lt;toml_edit::parser::array::array_values&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#1}&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl::&lt;combine::parser::FirstMode&gt; (1 samples, 1.64%)</title><rect x="9.8361%" y="501" width="1.6393%" height="15" fill="rgb(250,191,14)" fg:x="6" fg:w="1"/><text x="10.0861%" y="511.50"></text></g><g><title>&lt;combine::parser::FirstMode as combine::parser::ParseMode&gt;::parse::&lt;(combine::parser::choice::Optional&lt;combine::parser::combinator::Map&lt;combine::parser::range::RecognizeWithValue&lt;combine::parser::repeat::SepEndBy1&lt;toml_edit::array::Array, toml_edit::parser::array::array_value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, combine::parser::token::Token&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;&gt;, &lt;toml_edit::parser::array::array_values&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt;&gt;, toml_edit::parser::trivia::ws_comment_newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;), combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; (1 samples, 1.64%)</title><rect x="9.8361%" y="485" width="1.6393%" height="15" fill="rgb(239,60,40)" fg:x="6" fg:w="1"/><text x="10.0861%" y="495.50"></text></g><g><title>&lt;toml_edit::parser::trivia::ws_comment_newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl::&lt;combine::parser::FirstMode&gt; (1 samples, 1.64%)</title><rect x="9.8361%" y="469" width="1.6393%" height="15" fill="rgb(206,27,48)" fg:x="6" fg:w="1"/><text x="10.0861%" y="479.50"></text></g><g><title>&lt;combine::parser::repeat::Sink as core::iter::traits::collect::Extend&lt;()&gt;&gt;::extend::&lt;&amp;mut combine::parser::repeat::Iter&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;, &amp;mut combine::parser::combinator::Ignore&lt;&amp;mut combine::parser::choice::Choice&lt;(combine::parser::repeat::SkipMany1&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;, combine::parser::choice::Choice&lt;(combine::parser::range::TakeWhile1&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;, toml_edit::parser::trivia::is_wschar&gt;, combine::parser::combinator::Map&lt;toml_edit::parser::trivia::newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::parser::trivia::ws_comment_newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt;)&gt;&gt;, combine::parser::combinator::Map&lt;toml_edit::parser::trivia::comment&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::parser::trivia::ws_comment_newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#1}&gt;)&gt;&gt;, &amp;mut combine::parser::choice::Y&lt;(bool, bool, combine::parser::repeat::Sink, combine::parser::choice::Y&lt;usize, ()&gt;), ()&gt;, combine::parser::FirstMode&gt;&gt; (1 samples, 1.64%)</title><rect x="9.8361%" y="453" width="1.6393%" height="15" fill="rgb(225,35,8)" fg:x="6" fg:w="1"/><text x="10.0861%" y="463.50"></text></g><g><title>_RINvXs_NtNtCs287N82ZWi4E_7combine6parser6choiceINtB5_6ChoiceTINtNtB7_6repeat9SkipMany1INtNtNtB9_6stream4easy6StreamINtNtB1r_8position6StreamRShNtB1S_15IndexPositionerEEIBK_TINtNtB7_5range10TakeWhile1B1m_NvNtNtCs1pxsnI9ZQZP_9toml_edit6parser6trivia9is_wscharEINtNtB7_10combinator3MapINtB3h_7newlineB1m_ENCINvXs3_B3h_INtB3h_18ws_comment_newlineB1m_EINtB7_6ParserB1m_E15parse_mode_implNtB7_9FirstModeE0EEEEIB49_INtB3h_7commentB1m_ENCB4S_s_0EEEIB5A_B1m_E15parse_mode_implB68_EB3l_.llvm.1750309724704944180 (1 samples, 1.64%)</title><rect x="9.8361%" y="437" width="1.6393%" height="15" fill="rgb(250,213,24)" fg:x="6" fg:w="1"/><text x="10.0861%" y="447.50"></text></g><g><title>_RINvXs_NtNtCs287N82ZWi4E_7combine6parser6choiceINtB5_6ChoiceTINtNtB7_5range10TakeWhile1INtNtNtB9_6stream4easy6StreamINtNtB1s_8position6StreamRShNtB1T_15IndexPositionerEENvNtNtCs1pxsnI9ZQZP_9toml_edit6parser6trivia9is_wscharEINtNtB7_10combinator3MapINtB2J_7newlineB1n_ENCINvXs3_B2J_INtB2J_18ws_comment_newlineB1n_EINtB7_6ParserB1n_E15parse_mode_implNtB7_9FirstModeE0EEEIB52_B1n_E15parse_mode_implB5A_EB2N_.llvm.1750309724704944180 (1 samples, 1.64%)</title><rect x="9.8361%" y="421" width="1.6393%" height="15" fill="rgb(247,123,22)" fg:x="6" fg:w="1"/><text x="10.0861%" y="431.50"></text></g><g><title>&lt;toml_edit::parser::trivia::newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl::&lt;combine::parser::FirstMode&gt; (1 samples, 1.64%)</title><rect x="9.8361%" y="405" width="1.6393%" height="15" fill="rgb(231,138,38)" fg:x="6" fg:w="1"/><text x="10.0861%" y="415.50"></text></g><g><title>&lt;im_rc::ord::map::OrdMap&lt;cargo::core::package_id::PackageId, im_rc::hash::set::HashSet&lt;cargo::core::dependency::Dependency&gt;&gt;&gt;::get_mut::&lt;cargo::core::package_id::PackageId&gt; (1 samples, 1.64%)</title><rect x="11.4754%" y="613" width="1.6393%" height="15" fill="rgb(231,145,46)" fg:x="7" fg:w="1"/><text x="11.7254%" y="623.50"></text></g><g><title>&lt;im_rc::nodes::btree::Node&lt;(cargo::core::package_id::PackageId, im_rc::hash::set::HashSet&lt;cargo::core::dependency::Dependency&gt;)&gt;&gt;::lookup_mut::&lt;cargo::core::package_id::PackageId&gt; (1 samples, 1.64%)</title><rect x="11.4754%" y="597" width="1.6393%" height="15" fill="rgb(251,118,11)" fg:x="7" fg:w="1"/><text x="11.7254%" y="607.50"></text></g><g><title>__rust_probestack (1 samples, 1.64%)</title><rect x="11.4754%" y="581" width="1.6393%" height="15" fill="rgb(217,147,25)" fg:x="7" fg:w="1"/><text x="11.7254%" y="591.50"></text></g><g><title>&lt;semver::identifier::Identifier as core::ops::drop::Drop&gt;::drop (1 samples, 1.64%)</title><rect x="13.1148%" y="613" width="1.6393%" height="15" fill="rgb(247,81,37)" fg:x="8" fg:w="1"/><text x="13.3648%" y="623.50"></text></g><g><title>cargo::cli::main (1 samples, 1.64%)</title><rect x="14.7541%" y="613" width="1.6393%" height="15" fill="rgb(209,12,38)" fg:x="9" fg:w="1"/><text x="15.0041%" y="623.50"></text></g><g><title>_RNvNtNtCsbl5Lf1v2mf0_5cargo8commands8metadata4exec.llvm.14491813518172628164 (1 samples, 1.64%)</title><rect x="14.7541%" y="597" width="1.6393%" height="15" fill="rgb(227,1,9)" fg:x="9" fg:w="1"/><text x="15.0041%" y="607.50"></text></g><g><title>cargo::ops::cargo_output_metadata::output_metadata (1 samples, 1.64%)</title><rect x="14.7541%" y="581" width="1.6393%" height="15" fill="rgb(248,47,43)" fg:x="9" fg:w="1"/><text x="15.0041%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;cargo::core::package::SerializedPackage&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;cargo::core::package::SerializedPackage, core::iter::adapters::map::Map&lt;core::iter::adapters::filter_map::FilterMap&lt;alloc::collections::btree::map::IntoIter&lt;cargo::core::package_id::PackageId, cargo::core::package::Package&gt;, cargo::ops::cargo_output_metadata::build_resolve_graph::{closure#1}&gt;, cargo::ops::cargo_output_metadata::build_resolve_graph::{closure#2}&gt;&gt;&gt;::from_iter (1 samples, 1.64%)</title><rect x="14.7541%" y="565" width="1.6393%" height="15" fill="rgb(221,10,30)" fg:x="9" fg:w="1"/><text x="15.0041%" y="575.50"></text></g><g><title>&lt;cargo::core::package::Package&gt;::serialized (1 samples, 1.64%)</title><rect x="14.7541%" y="549" width="1.6393%" height="15" fill="rgb(210,229,1)" fg:x="9" fg:w="1"/><text x="15.0041%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;cargo::util::interning::InternedString, alloc::vec::Vec&lt;cargo::util::interning::InternedString&gt;&gt; as core::iter::traits::collect::FromIterator&lt;(cargo::util::interning::InternedString, alloc::vec::Vec&lt;cargo::util::interning::InternedString&gt;)&gt;&gt;::from_iter::&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::Iter&lt;cargo::util::interning::InternedString, alloc::vec::Vec&lt;cargo::core::summary::FeatureValue&gt;&gt;, &lt;cargo::core::package::Package&gt;::serialized::{closure#1}&gt;&gt; (1 samples, 1.64%)</title><rect x="14.7541%" y="533" width="1.6393%" height="15" fill="rgb(222,148,37)" fg:x="9" fg:w="1"/><text x="15.0041%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;(cargo::util::interning::InternedString, alloc::vec::Vec&lt;cargo::util::interning::InternedString&gt;)&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;(cargo::util::interning::InternedString, alloc::vec::Vec&lt;cargo::util::interning::InternedString&gt;), core::iter::adapters::map::Map&lt;alloc::collections::btree::map::Iter&lt;cargo::util::interning::InternedString, alloc::vec::Vec&lt;cargo::core::summary::FeatureValue&gt;&gt;, &lt;cargo::core::package::Package&gt;::serialized::{closure#1}&gt;&gt;&gt;::from_iter (1 samples, 1.64%)</title><rect x="14.7541%" y="517" width="1.6393%" height="15" fill="rgb(234,67,33)" fg:x="9" fg:w="1"/><text x="15.0041%" y="527.50"></text></g><g><title>cargo::core::resolver::resolve (1 samples, 1.64%)</title><rect x="16.3934%" y="613" width="1.6393%" height="15" fill="rgb(247,98,35)" fg:x="10" fg:w="1"/><text x="16.6434%" y="623.50"></text></g><g><title>cargo::core::resolver::activate_deps_loop (1 samples, 1.64%)</title><rect x="16.3934%" y="597" width="1.6393%" height="15" fill="rgb(247,138,52)" fg:x="10" fg:w="1"/><text x="16.6434%" y="607.50"></text></g><g><title>cargo::core::resolver::activate (1 samples, 1.64%)</title><rect x="16.3934%" y="581" width="1.6393%" height="15" fill="rgb(213,79,30)" fg:x="10" fg:w="1"/><text x="16.6434%" y="591.50"></text></g><g><title>&lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::build_deps (1 samples, 1.64%)</title><rect x="16.3934%" y="565" width="1.6393%" height="15" fill="rgb(246,177,23)" fg:x="10" fg:w="1"/><text x="16.6434%" y="575.50"></text></g><g><title>core::iter::adapters::try_process::&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;, &lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::build_deps::{closure#0}&gt;, (cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;), core::result::Result&lt;core::convert::Infallible, anyhow::Error&gt;, &lt;core::result::Result&lt;alloc::vec::Vec&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;, anyhow::Error&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;), anyhow::Error&gt;&gt;&gt;::from_iter&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;, &lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::build_deps::{closure#0}&gt;&gt;::{closure#0}, alloc::vec::Vec&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;&gt; (1 samples, 1.64%)</title><rect x="16.3934%" y="549" width="1.6393%" height="15" fill="rgb(230,62,27)" fg:x="10" fg:w="1"/><text x="16.6434%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;), core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;, &lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::build_deps::{closure#0}&gt;, core::result::Result&lt;core::convert::Infallible, anyhow::Error&gt;&gt;&gt;&gt;::from_iter (1 samples, 1.64%)</title><rect x="16.3934%" y="533" width="1.6393%" height="15" fill="rgb(216,154,8)" fg:x="10" fg:w="1"/><text x="16.6434%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;, &lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::build_deps::{closure#0}&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::&lt;(), &lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;, &lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::build_deps::{closure#0}&gt;, core::result::Result&lt;core::convert::Infallible, anyhow::Error&gt;&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold&lt;(), core::iter::traits::iterator::Iterator::try_for_each::call&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;), core::ops::control_flow::ControlFlow&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;, core::ops::control_flow::ControlFlow&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;::Break&gt;::{closure#0}, core::ops::control_flow::ControlFlow&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;&gt;::{closure#0}, core::ops::control_flow::ControlFlow&lt;core::ops::control_flow::ControlFlow&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;&gt;&gt; (1 samples, 1.64%)</title><rect x="16.3934%" y="517" width="1.6393%" height="15" fill="rgb(244,35,45)" fg:x="10" fg:w="1"/><text x="16.6434%" y="527.50"></text></g><g><title>&lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::query (1 samples, 1.64%)</title><rect x="16.3934%" y="501" width="1.6393%" height="15" fill="rgb(251,115,12)" fg:x="10" fg:w="1"/><text x="16.6434%" y="511.50"></text></g><g><title>&lt;cargo::core::registry::PackageRegistry as cargo::core::registry::Registry&gt;::query (1 samples, 1.64%)</title><rect x="16.3934%" y="485" width="1.6393%" height="15" fill="rgb(240,54,50)" fg:x="10" fg:w="1"/><text x="16.6434%" y="495.50"></text></g><g><title>&lt;cargo::sources::registry::RegistrySource as cargo::core::source::Source&gt;::query (1 samples, 1.64%)</title><rect x="16.3934%" y="469" width="1.6393%" height="15" fill="rgb(233,84,52)" fg:x="10" fg:w="1"/><text x="16.6434%" y="479.50"></text></g><g><title>_RNvMs0_NtNtNtCsgSF8yZciVh5_5cargo7sources8registry5indexNtB5_13RegistryIndex23query_inner_with_online.llvm.18220262120966134562 (1 samples, 1.64%)</title><rect x="16.3934%" y="453" width="1.6393%" height="15" fill="rgb(207,117,47)" fg:x="10" fg:w="1"/><text x="16.6434%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter_map::FilterMap&lt;core::iter::adapters::filter_map::FilterMap&lt;std::collections::hash::map::IterMut&lt;semver::Version, cargo::sources::registry::index::MaybeIndexSummary&gt;, &lt;cargo::sources::registry::index::RegistryIndex&gt;::summaries::{closure#0}&gt;, &lt;cargo::sources::registry::index::RegistryIndex&gt;::summaries::{closure#1}&gt;, &lt;cargo::sources::registry::index::RegistryIndex&gt;::summaries::{closure#2}&gt;, &lt;cargo::sources::registry::index::RegistryIndex&gt;::query_inner_with_online::{closure#0}&gt;, &lt;cargo::sources::registry::index::RegistryIndex&gt;::query_inner_with_online::{closure#1}&gt;, &lt;cargo::sources::registry::index::RegistryIndex&gt;::query_inner_with_online::{closure#2}&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::&lt;(), core::iter::traits::iterator::Iterator::find::check&lt;cargo::core::summary::Summary, &amp;mut &lt;cargo::sources::registry::index::RegistryIndex&gt;::query_inner_with_online::{closure#3}&gt;::{closure#0}, core::ops::control_flow::ControlFlow&lt;cargo::core::summary::Summary&gt;&gt; (1 samples, 1.64%)</title><rect x="16.3934%" y="437" width="1.6393%" height="15" fill="rgb(249,43,39)" fg:x="10" fg:w="1"/><text x="16.6434%" y="447.50"></text></g><g><title>_RNvMs5_NtNtNtCsgSF8yZciVh5_5cargo7sources8registry5indexNtB5_12IndexSummary5parse.llvm.18220262120966134562 (1 samples, 1.64%)</title><rect x="16.3934%" y="421" width="1.6393%" height="15" fill="rgb(209,38,44)" fg:x="10" fg:w="1"/><text x="16.6434%" y="431.50"></text></g><g><title>&lt;cargo::core::summary::Summary&gt;::new::&lt;cargo::util::interning::InternedString&gt; (1 samples, 1.64%)</title><rect x="16.3934%" y="405" width="1.6393%" height="15" fill="rgb(236,212,23)" fg:x="10" fg:w="1"/><text x="16.6434%" y="415.50"></text></g><g><title>cargo::core::summary::build_feature_map (1 samples, 1.64%)</title><rect x="16.3934%" y="389" width="1.6393%" height="15" fill="rgb(242,79,21)" fg:x="10" fg:w="1"/><text x="16.6434%" y="399.50"></text></g><g><title>cargo::main (1 samples, 1.64%)</title><rect x="18.0328%" y="613" width="1.6393%" height="15" fill="rgb(211,96,35)" fg:x="11" fg:w="1"/><text x="18.2828%" y="623.50"></text></g><g><title>cargo::cli::main (1 samples, 1.64%)</title><rect x="18.0328%" y="597" width="1.6393%" height="15" fill="rgb(253,215,40)" fg:x="11" fg:w="1"/><text x="18.2828%" y="607.50"></text></g><g><title>_RNvNtNtCsbl5Lf1v2mf0_5cargo8commands8metadata4exec.llvm.14491813518172628164 (1 samples, 1.64%)</title><rect x="18.0328%" y="581" width="1.6393%" height="15" fill="rgb(211,81,21)" fg:x="11" fg:w="1"/><text x="18.2828%" y="591.50"></text></g><g><title>cargo::ops::cargo_output_metadata::output_metadata (1 samples, 1.64%)</title><rect x="18.0328%" y="565" width="1.6393%" height="15" fill="rgb(208,190,38)" fg:x="11" fg:w="1"/><text x="18.2828%" y="575.50"></text></g><g><title>core::ptr::drop_in_place::&lt;cargo::core::compiler::build_context::target_info::RustcTargetData&gt; (1 samples, 1.64%)</title><rect x="18.0328%" y="549" width="1.6393%" height="15" fill="rgb(235,213,38)" fg:x="11" fg:w="1"/><text x="18.2828%" y="559.50"></text></g><g><title>core::ptr::drop_in_place::&lt;cargo::core::compiler::build_context::target_info::TargetInfo&gt; (1 samples, 1.64%)</title><rect x="18.0328%" y="533" width="1.6393%" height="15" fill="rgb(237,122,38)" fg:x="11" fg:w="1"/><text x="18.2828%" y="543.50"></text></g><g><title>__free (1 samples, 1.64%)</title><rect x="18.0328%" y="517" width="1.6393%" height="15" fill="rgb(244,218,35)" fg:x="11" fg:w="1"/><text x="18.2828%" y="527.50"></text></g><g><title>cargo_util::paths::_create_dir_all (2 samples, 3.28%)</title><rect x="21.3115%" y="517" width="3.2787%" height="15" fill="rgb(240,68,47)" fg:x="13" fg:w="2"/><text x="21.5615%" y="527.50">car..</text></g><g><title>std::fs::DirBuilder::create_dir_all (2 samples, 3.28%)</title><rect x="21.3115%" y="501" width="3.2787%" height="15" fill="rgb(210,16,53)" fg:x="13" fg:w="2"/><text x="21.5615%" y="511.50">std..</text></g><g><title>std::sys::unix::fs::DirBuilder::mkdir (2 samples, 3.28%)</title><rect x="21.3115%" y="485" width="3.2787%" height="15" fill="rgb(235,124,12)" fg:x="13" fg:w="2"/><text x="21.5615%" y="495.50">std..</text></g><g><title>__GI_mkdir (2 samples, 3.28%)</title><rect x="21.3115%" y="469" width="3.2787%" height="15" fill="rgb(224,169,11)" fg:x="13" fg:w="2"/><text x="21.5615%" y="479.50">__G..</text></g><g><title>cargo::ops::cargo_output_metadata::output_metadata (8 samples, 13.11%)</title><rect x="19.6721%" y="613" width="13.1148%" height="15" fill="rgb(250,166,2)" fg:x="12" fg:w="8"/><text x="19.9221%" y="623.50">cargo::ops::cargo_ou..</text></g><g><title>cargo::ops::resolve::resolve_ws_with_opts (8 samples, 13.11%)</title><rect x="19.6721%" y="597" width="13.1148%" height="15" fill="rgb(242,216,29)" fg:x="12" fg:w="8"/><text x="19.9221%" y="607.50">cargo::ops::resolve:..</text></g><g><title>&lt;cargo::core::package::PackageSet&gt;::download_accessible (8 samples, 13.11%)</title><rect x="19.6721%" y="581" width="13.1148%" height="15" fill="rgb(230,116,27)" fg:x="12" fg:w="8"/><text x="19.9221%" y="591.50">&lt;cargo::core::packag..</text></g><g><title>&lt;cargo::core::package::Downloads&gt;::start (8 samples, 13.11%)</title><rect x="19.6721%" y="565" width="13.1148%" height="15" fill="rgb(228,99,48)" fg:x="12" fg:w="8"/><text x="19.9221%" y="575.50">&lt;cargo::core::packag..</text></g><g><title>&lt;cargo::sources::registry::RegistrySource as cargo::core::source::Source&gt;::download (8 samples, 13.11%)</title><rect x="19.6721%" y="549" width="13.1148%" height="15" fill="rgb(253,11,6)" fg:x="12" fg:w="8"/><text x="19.9221%" y="559.50">&lt;cargo::sources::reg..</text></g><g><title>&lt;cargo::sources::registry::RegistrySource&gt;::get_pkg (8 samples, 13.11%)</title><rect x="19.6721%" y="533" width="13.1148%" height="15" fill="rgb(247,143,39)" fg:x="12" fg:w="8"/><text x="19.9221%" y="543.50">&lt;cargo::sources::reg..</text></g><g><title>std::sys::unix::fs::stat (5 samples, 8.20%)</title><rect x="24.5902%" y="517" width="8.1967%" height="15" fill="rgb(236,97,10)" fg:x="15" fg:w="5"/><text x="24.8402%" y="527.50">std::sys::u..</text></g><g><title>std::sys::unix::fs::try_statx (5 samples, 8.20%)</title><rect x="24.5902%" y="501" width="8.1967%" height="15" fill="rgb(233,208,19)" fg:x="15" fg:w="5"/><text x="24.8402%" y="511.50">std::sys::u..</text></g><g><title>std::sys::unix::fs::try_statx::statx (5 samples, 8.20%)</title><rect x="24.5902%" y="485" width="8.1967%" height="15" fill="rgb(216,164,2)" fg:x="15" fg:w="5"/><text x="24.8402%" y="495.50">std::sys::u..</text></g><g><title>statx (5 samples, 8.20%)</title><rect x="24.5902%" y="469" width="8.1967%" height="15" fill="rgb(220,129,5)" fg:x="15" fg:w="5"/><text x="24.8402%" y="479.50">statx</text></g><g><title>cargo::ops::resolve::resolve_with_registry (1 samples, 1.64%)</title><rect x="32.7869%" y="613" width="1.6393%" height="15" fill="rgb(242,17,10)" fg:x="20" fg:w="1"/><text x="33.0369%" y="623.50"></text></g><g><title>cargo::ops::resolve::resolve_with_previous (1 samples, 1.64%)</title><rect x="32.7869%" y="597" width="1.6393%" height="15" fill="rgb(242,107,0)" fg:x="20" fg:w="1"/><text x="33.0369%" y="607.50"></text></g><g><title>cargo::core::resolver::resolve (1 samples, 1.64%)</title><rect x="32.7869%" y="581" width="1.6393%" height="15" fill="rgb(251,28,31)" fg:x="20" fg:w="1"/><text x="33.0369%" y="591.50"></text></g><g><title>cargo::core::resolver::activate_deps_loop (1 samples, 1.64%)</title><rect x="32.7869%" y="565" width="1.6393%" height="15" fill="rgb(233,223,10)" fg:x="20" fg:w="1"/><text x="33.0369%" y="575.50"></text></g><g><title>cargo::core::resolver::activate (1 samples, 1.64%)</title><rect x="32.7869%" y="549" width="1.6393%" height="15" fill="rgb(215,21,27)" fg:x="20" fg:w="1"/><text x="33.0369%" y="559.50"></text></g><g><title>&lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::build_deps (1 samples, 1.64%)</title><rect x="32.7869%" y="533" width="1.6393%" height="15" fill="rgb(232,23,21)" fg:x="20" fg:w="1"/><text x="33.0369%" y="543.50"></text></g><g><title>core::iter::adapters::try_process::&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;, &lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::build_deps::{closure#0}&gt;, (cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;), core::result::Result&lt;core::convert::Infallible, anyhow::Error&gt;, &lt;core::result::Result&lt;alloc::vec::Vec&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;, anyhow::Error&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;), anyhow::Error&gt;&gt;&gt;::from_iter&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;, &lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::build_deps::{closure#0}&gt;&gt;::{closure#0}, alloc::vec::Vec&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;&gt; (1 samples, 1.64%)</title><rect x="32.7869%" y="517" width="1.6393%" height="15" fill="rgb(244,5,23)" fg:x="20" fg:w="1"/><text x="33.0369%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;), core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;, &lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::build_deps::{closure#0}&gt;, core::result::Result&lt;core::convert::Infallible, anyhow::Error&gt;&gt;&gt;&gt;::from_iter (1 samples, 1.64%)</title><rect x="32.7869%" y="501" width="1.6393%" height="15" fill="rgb(226,81,46)" fg:x="20" fg:w="1"/><text x="33.0369%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;, &lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::build_deps::{closure#0}&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::&lt;(), &lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;, &lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::build_deps::{closure#0}&gt;, core::result::Result&lt;core::convert::Infallible, anyhow::Error&gt;&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold&lt;(), core::iter::traits::iterator::Iterator::try_for_each::call&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;), core::ops::control_flow::ControlFlow&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;, core::ops::control_flow::ControlFlow&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;::Break&gt;::{closure#0}, core::ops::control_flow::ControlFlow&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;&gt;::{closure#0}, core::ops::control_flow::ControlFlow&lt;core::ops::control_flow::ControlFlow&lt;(cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, alloc::rc::Rc&lt;alloc::collections::btree::set::BTreeSet&lt;cargo::util::interning::InternedString&gt;&gt;)&gt;&gt;&gt; (1 samples, 1.64%)</title><rect x="32.7869%" y="485" width="1.6393%" height="15" fill="rgb(247,70,30)" fg:x="20" fg:w="1"/><text x="33.0369%" y="495.50"></text></g><g><title>&lt;cargo::core::resolver::dep_cache::RegistryQueryer&gt;::query (1 samples, 1.64%)</title><rect x="32.7869%" y="469" width="1.6393%" height="15" fill="rgb(212,68,19)" fg:x="20" fg:w="1"/><text x="33.0369%" y="479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;cargo::core::dependency::Dependency, alloc::rc::Rc&lt;alloc::vec::Vec&lt;cargo::core::summary::Summary&gt;&gt;, std::collections::hash::map::RandomState&gt;&gt;::insert (1 samples, 1.64%)</title><rect x="32.7869%" y="453" width="1.6393%" height="15" fill="rgb(240,187,13)" fg:x="20" fg:w="1"/><text x="33.0369%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::hash_one::&lt;&amp;cargo::core::dependency::Dependency&gt; (1 samples, 1.64%)</title><rect x="32.7869%" y="437" width="1.6393%" height="15" fill="rgb(223,113,26)" fg:x="20" fg:w="1"/><text x="33.0369%" y="447.50"></text></g><g><title>&lt;cargo::core::dependency::Dependency as core::hash::Hash&gt;::hash::&lt;std::collections::hash::map::DefaultHasher&gt; (1 samples, 1.64%)</title><rect x="32.7869%" y="421" width="1.6393%" height="15" fill="rgb(206,192,2)" fg:x="20" fg:w="1"/><text x="33.0369%" y="431.50"></text></g><g><title>&lt;core::option::Option&lt;cargo::core::source::source_id::SourceId&gt; as core::hash::Hash&gt;::hash::&lt;std::collections::hash::map::DefaultHasher&gt; (1 samples, 1.64%)</title><rect x="32.7869%" y="405" width="1.6393%" height="15" fill="rgb(241,108,4)" fg:x="20" fg:w="1"/><text x="33.0369%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 1.64%)</title><rect x="32.7869%" y="389" width="1.6393%" height="15" fill="rgb(247,173,49)" fg:x="20" fg:w="1"/><text x="33.0369%" y="399.50"></text></g><g><title>&lt;core::option::Option&lt;toml_edit::easy::value::Value&gt; as core::clone::Clone&gt;::clone (1 samples, 1.64%)</title><rect x="34.4262%" y="581" width="1.6393%" height="15" fill="rgb(224,114,35)" fg:x="21" fg:w="1"/><text x="34.6762%" y="591.50"></text></g><g><title>&lt;indexmap::map::core::IndexMapCore&lt;alloc::string::String, toml_edit::easy::value::Value&gt; as core::clone::Clone&gt;::clone (1 samples, 1.64%)</title><rect x="34.4262%" y="565" width="1.6393%" height="15" fill="rgb(245,159,27)" fg:x="21" fg:w="1"/><text x="34.6762%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;alloc::string::String, toml_edit::easy::value::Value&gt;&gt; as core::clone::Clone&gt;::clone_from (1 samples, 1.64%)</title><rect x="34.4262%" y="549" width="1.6393%" height="15" fill="rgb(245,172,44)" fg:x="21" fg:w="1"/><text x="34.6762%" y="559.50"></text></g><g><title>&lt;indexmap::Bucket&lt;alloc::string::String, toml_edit::easy::value::Value&gt; as core::clone::Clone&gt;::clone (1 samples, 1.64%)</title><rect x="34.4262%" y="533" width="1.6393%" height="15" fill="rgb(236,23,11)" fg:x="21" fg:w="1"/><text x="34.6762%" y="543.50"></text></g><g><title>&lt;indexmap::map::core::IndexMapCore&lt;alloc::string::String, toml_edit::easy::value::Value&gt; as core::clone::Clone&gt;::clone (1 samples, 1.64%)</title><rect x="34.4262%" y="517" width="1.6393%" height="15" fill="rgb(205,117,38)" fg:x="21" fg:w="1"/><text x="34.6762%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;alloc::string::String, toml_edit::easy::value::Value&gt;&gt; as core::clone::Clone&gt;::clone_from (1 samples, 1.64%)</title><rect x="34.4262%" y="501" width="1.6393%" height="15" fill="rgb(237,72,25)" fg:x="21" fg:w="1"/><text x="34.6762%" y="511.50"></text></g><g><title>&lt;indexmap::Bucket&lt;alloc::string::String, toml_edit::easy::value::Value&gt; as core::clone::Clone&gt;::clone (1 samples, 1.64%)</title><rect x="34.4262%" y="485" width="1.6393%" height="15" fill="rgb(244,70,9)" fg:x="21" fg:w="1"/><text x="34.6762%" y="495.50"></text></g><g><title>&lt;indexmap::map::core::IndexMapCore&lt;alloc::string::String, toml_edit::easy::value::Value&gt; as core::clone::Clone&gt;::clone (1 samples, 1.64%)</title><rect x="34.4262%" y="469" width="1.6393%" height="15" fill="rgb(217,125,39)" fg:x="21" fg:w="1"/><text x="34.6762%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 1.64%)</title><rect x="34.4262%" y="453" width="1.6393%" height="15" fill="rgb(235,36,10)" fg:x="21" fg:w="1"/><text x="34.6762%" y="463.50"></text></g><g><title>_int_malloc (1 samples, 1.64%)</title><rect x="34.4262%" y="437" width="1.6393%" height="15" fill="rgb(251,123,47)" fg:x="21" fg:w="1"/><text x="34.6762%" y="447.50"></text></g><g><title>cargo::util::toml::readme_for_project (1 samples, 1.64%)</title><rect x="36.0656%" y="581" width="1.6393%" height="15" fill="rgb(221,13,13)" fg:x="22" fg:w="1"/><text x="36.3156%" y="591.50"></text></g><g><title>std::path::Path::is_file (1 samples, 1.64%)</title><rect x="36.0656%" y="565" width="1.6393%" height="15" fill="rgb(238,131,9)" fg:x="22" fg:w="1"/><text x="36.3156%" y="575.50"></text></g><g><title>std::fs::metadata (1 samples, 1.64%)</title><rect x="36.0656%" y="549" width="1.6393%" height="15" fill="rgb(211,50,8)" fg:x="22" fg:w="1"/><text x="36.3156%" y="559.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 1.64%)</title><rect x="36.0656%" y="533" width="1.6393%" height="15" fill="rgb(245,182,24)" fg:x="22" fg:w="1"/><text x="36.3156%" y="543.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 1.64%)</title><rect x="36.0656%" y="517" width="1.6393%" height="15" fill="rgb(242,14,37)" fg:x="22" fg:w="1"/><text x="36.3156%" y="527.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 1.64%)</title><rect x="36.0656%" y="501" width="1.6393%" height="15" fill="rgb(246,228,12)" fg:x="22" fg:w="1"/><text x="36.3156%" y="511.50"></text></g><g><title>statx (1 samples, 1.64%)</title><rect x="36.0656%" y="485" width="1.6393%" height="15" fill="rgb(213,55,15)" fg:x="22" fg:w="1"/><text x="36.3156%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;(alloc::string::String, std::path::PathBuf)&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;(alloc::string::String, std::path::PathBuf), core::iter::adapters::filter_map::FilterMap&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter_map::FilterMap&lt;std::fs::ReadDir, cargo::util::toml::targets::infer_from_directory::{closure#0}&gt;, cargo::util::toml::targets::is_not_dotfile&gt;, cargo::util::toml::targets::infer_from_directory::{closure#1}&gt;&gt;&gt;::from_iter (1 samples, 1.64%)</title><rect x="37.7049%" y="565" width="1.6393%" height="15" fill="rgb(209,9,3)" fg:x="23" fg:w="1"/><text x="37.9549%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter_map::FilterMap&lt;std::fs::ReadDir, cargo::util::toml::targets::infer_from_directory::{closure#0}&gt;, cargo::util::toml::targets::is_not_dotfile&gt;, cargo::util::toml::targets::infer_from_directory::{closure#1}&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.64%)</title><rect x="37.7049%" y="549" width="1.6393%" height="15" fill="rgb(230,59,30)" fg:x="23" fg:w="1"/><text x="37.9549%" y="559.50"></text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.64%)</title><rect x="37.7049%" y="533" width="1.6393%" height="15" fill="rgb(209,121,21)" fg:x="23" fg:w="1"/><text x="37.9549%" y="543.50"></text></g><g><title>&lt;std::sys::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.64%)</title><rect x="37.7049%" y="517" width="1.6393%" height="15" fill="rgb(220,109,13)" fg:x="23" fg:w="1"/><text x="37.9549%" y="527.50"></text></g><g><title>__readdir (1 samples, 1.64%)</title><rect x="37.7049%" y="501" width="1.6393%" height="15" fill="rgb(232,18,1)" fg:x="23" fg:w="1"/><text x="37.9549%" y="511.50"></text></g><g><title>__GI___getdents64 (1 samples, 1.64%)</title><rect x="37.7049%" y="485" width="1.6393%" height="15" fill="rgb(215,41,42)" fg:x="23" fg:w="1"/><text x="37.9549%" y="495.50"></text></g><g><title>&lt;cargo::util::toml::TomlManifest&gt;::to_real_manifest (5 samples, 8.20%)</title><rect x="34.4262%" y="597" width="8.1967%" height="15" fill="rgb(224,123,36)" fg:x="21" fg:w="5"/><text x="34.6762%" y="607.50">&lt;cargo::uti..</text></g><g><title>cargo::util::toml::targets::targets (3 samples, 4.92%)</title><rect x="37.7049%" y="581" width="4.9180%" height="15" fill="rgb(240,125,3)" fg:x="23" fg:w="3"/><text x="37.9549%" y="591.50">cargo:..</text></g><g><title>std::sys::unix::fs::stat (2 samples, 3.28%)</title><rect x="39.3443%" y="565" width="3.2787%" height="15" fill="rgb(205,98,50)" fg:x="24" fg:w="2"/><text x="39.5943%" y="575.50">std..</text></g><g><title>std::sys::unix::fs::try_statx (2 samples, 3.28%)</title><rect x="39.3443%" y="549" width="3.2787%" height="15" fill="rgb(205,185,37)" fg:x="24" fg:w="2"/><text x="39.5943%" y="559.50">std..</text></g><g><title>std::sys::unix::fs::try_statx::statx (2 samples, 3.28%)</title><rect x="39.3443%" y="533" width="3.2787%" height="15" fill="rgb(238,207,15)" fg:x="24" fg:w="2"/><text x="39.5943%" y="543.50">std..</text></g><g><title>statx (2 samples, 3.28%)</title><rect x="39.3443%" y="517" width="3.2787%" height="15" fill="rgb(213,199,42)" fg:x="24" fg:w="2"/><text x="39.5943%" y="527.50">sta..</text></g><g><title>&lt;combine::parser::combinator::AndThen&lt;(toml_edit::parser::key::key&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, combine::parser::token::Token&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, (toml_edit::parser::trivia::ws&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::value::value&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::trivia::line_trailing&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;)), &lt;toml_edit::parser::document::parse_keyval&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl::&lt;combine::parser::FirstMode&gt; (1 samples, 1.64%)</title><rect x="42.6230%" y="485" width="1.6393%" height="15" fill="rgb(235,201,11)" fg:x="26" fg:w="1"/><text x="42.8730%" y="495.50"></text></g><g><title>_RINvXsc_NtNtCs287N82ZWi4E_7combine6parser8sequenceTINtNtNtCs1pxsnI9ZQZP_9toml_edit6parser3key3keyINtNtNtBa_6stream4easy6StreamINtNtB1C_8position6StreamRShNtB23_15IndexPositionerEEEINtNtB8_5token5TokenB1x_ETINtNtBS_6trivia2wsB1x_EINtNtBS_5value5valueB1x_EINtB3l_13line_trailingB1x_EEEINtB8_6ParserB1x_E15parse_mode_implNtB8_9FirstModeEBU_.llvm.1750309724704944180 (1 samples, 1.64%)</title><rect x="42.6230%" y="469" width="1.6393%" height="15" fill="rgb(207,46,11)" fg:x="26" fg:w="1"/><text x="42.8730%" y="479.50"></text></g><g><title>_RINvXNtNtCs1pxsnI9ZQZP_9toml_edit6parser3keyINtB3_3keyINtNtNtCs287N82ZWi4E_7combine6stream4easy6StreamINtNtBV_8position6StreamRShNtB1F_15IndexPositionerEEEINtNtBX_6parser6ParserBQ_E15parse_mode_implNtB2w_9FirstModeEB7_.llvm.1750309724704944180 (1 samples, 1.64%)</title><rect x="42.6230%" y="453" width="1.6393%" height="15" fill="rgb(241,35,35)" fg:x="26" fg:w="1"/><text x="42.8730%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;toml_edit::key::Key&gt; as alloc::vec::spec_extend::SpecExtend&lt;toml_edit::key::Key, core::option::IntoIter&lt;toml_edit::key::Key&gt;&gt;&gt;::spec_extend (1 samples, 1.64%)</title><rect x="42.6230%" y="437" width="1.6393%" height="15" fill="rgb(243,32,47)" fg:x="26" fg:w="1"/><text x="42.8730%" y="447.50"></text></g><g><title>cargo::util::toml::read_manifest_from_str (7 samples, 11.48%)</title><rect x="34.4262%" y="613" width="11.4754%" height="15" fill="rgb(247,202,23)" fg:x="21" fg:w="7"/><text x="34.6762%" y="623.50">cargo::util::toml..</text></g><g><title>&lt;toml_edit::document::Document as core::str::traits::FromStr&gt;::from_str (2 samples, 3.28%)</title><rect x="42.6230%" y="597" width="3.2787%" height="15" fill="rgb(219,102,11)" fg:x="26" fg:w="2"/><text x="42.8730%" y="607.50">&lt;to..</text></g><g><title>&lt;combine::parser::sequence::With&lt;toml_edit::parser::document::parse_ws&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, combine::parser::choice::Choice&lt;(combine::parser::token::Eof&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, combine::parser::repeat::SkipMany1&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;, combine::parser::sequence::Skip&lt;combine::parser::sequence::Then&lt;combine::parser::combinator::LookAhead&lt;combine::parser::token::Any&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;, &lt;toml_edit::parser::TomlParser&gt;::parse::{closure#0}&gt;, toml_edit::parser::document::parse_ws&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;&gt;)&gt;&gt; as combine::parser::EasyParser&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;::easy_parse (2 samples, 3.28%)</title><rect x="42.6230%" y="581" width="3.2787%" height="15" fill="rgb(243,110,44)" fg:x="26" fg:w="2"/><text x="42.8730%" y="591.50">&lt;co..</text></g><g><title>&lt;combine::parser::FirstMode as combine::parser::ParseMode&gt;::parse::&lt;combine::parser::sequence::With&lt;toml_edit::parser::document::parse_ws&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, combine::parser::choice::Choice&lt;(combine::parser::token::Eof&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, combine::parser::repeat::SkipMany1&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;, combine::parser::sequence::Skip&lt;combine::parser::sequence::Then&lt;combine::parser::combinator::LookAhead&lt;combine::parser::token::Any&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;, &lt;toml_edit::parser::TomlParser&gt;::parse::{closure#0}&gt;, toml_edit::parser::document::parse_ws&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;&gt;)&gt;&gt;, combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; (2 samples, 3.28%)</title><rect x="42.6230%" y="565" width="3.2787%" height="15" fill="rgb(222,74,54)" fg:x="26" fg:w="2"/><text x="42.8730%" y="575.50">&lt;co..</text></g><g><title>&lt;combine::parser::repeat::Sink as core::iter::traits::collect::Extend&lt;()&gt;&gt;::extend::&lt;&amp;mut combine::parser::repeat::Iter&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;, &amp;mut combine::parser::combinator::Ignore&lt;&amp;mut combine::parser::sequence::Skip&lt;combine::parser::sequence::Then&lt;combine::parser::combinator::LookAhead&lt;combine::parser::token::Any&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;, &lt;toml_edit::parser::TomlParser&gt;::parse::{closure#0}&gt;, toml_edit::parser::document::parse_ws&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;&gt;, &amp;mut combine::parser::sequence::PartialState2&lt;combine::parser::sequence::SequenceState&lt;(), ((), core::option::Option&lt;(bool, &lt;toml_edit::parser::TomlParser&gt;::parse::{closure#0}::Dispatch&lt;toml_edit::parser::document::parse_comment&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::table::table&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::document::parse_newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::document::keyval&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;)&gt;, core::option::Option&lt;&lt;toml_edit::parser::TomlParser&gt;::parse::{closure#0}::Dispatch&lt;(), (), (), ()&gt;&gt;)&gt;, combine::parser::sequence::SequenceState&lt;(), ()&gt;&gt;, combine::parser::FirstMode&gt;&gt; (2 samples, 3.28%)</title><rect x="42.6230%" y="549" width="3.2787%" height="15" fill="rgb(216,99,12)" fg:x="26" fg:w="2"/><text x="42.8730%" y="559.50">&lt;co..</text></g><g><title>_RINvYINtNtNtCs287N82ZWi4E_7combine6parser10combinator6IgnoreQINtNtB8_8sequence4SkipINtB10_4ThenINtB6_9LookAheadINtNtB8_5token3AnyINtNtNtBa_6stream4easy6StreamINtNtB28_8position6StreamRShNtB2z_15IndexPositionerEEEENCNvMNtNtCs1pxsnI9ZQZP_9toml_edit6parser8documentNtB3w_10TomlParser5parse0EINtB3u_8parse_wsB23_EEEINtB8_6ParserB23_E10parse_modeNtB8_9FirstModeEB3y_.llvm.1750309724704944180 (2 samples, 3.28%)</title><rect x="42.6230%" y="533" width="3.2787%" height="15" fill="rgb(226,22,26)" fg:x="26" fg:w="2"/><text x="42.8730%" y="543.50">_RI..</text></g><g><title>&lt;&lt;toml_edit::parser::TomlParser&gt;::parse::{closure#0}::Dispatch&lt;toml_edit::parser::document::parse_comment&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::table::table&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::document::parse_newline&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, toml_edit::parser::document::keyval&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode::&lt;combine::parser::FirstMode&gt; (2 samples, 3.28%)</title><rect x="42.6230%" y="517" width="3.2787%" height="15" fill="rgb(217,163,10)" fg:x="26" fg:w="2"/><text x="42.8730%" y="527.50">&lt;&lt;t..</text></g><g><title>&lt;combine::parser::combinator::AndThen&lt;toml_edit::parser::document::parse_keyval&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;, &lt;toml_edit::parser::document::keyval&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl&lt;combine::parser::FirstMode&gt;::{closure#0}&gt; as combine::parser::Parser&lt;combine::stream::easy::Stream&lt;combine::stream::position::Stream&lt;&amp;[u8], combine::stream::position::IndexPositioner&gt;&gt;&gt;&gt;::parse_mode_impl::&lt;combine::parser::FirstMode&gt; (2 samples, 3.28%)</title><rect x="42.6230%" y="501" width="3.2787%" height="15" fill="rgb(213,25,53)" fg:x="26" fg:w="2"/><text x="42.8730%" y="511.50">&lt;co..</text></g><g><title>&lt;toml_edit::parser::TomlParser&gt;::on_keyval (1 samples, 1.64%)</title><rect x="44.2623%" y="485" width="1.6393%" height="15" fill="rgb(252,105,26)" fg:x="27" fg:w="1"/><text x="44.5123%" y="495.50"></text></g><g><title>&lt;indexmap::map::core::IndexMapCore&lt;toml_edit::internal_string::InternalString, toml_edit::table::TableKeyValue&gt;&gt;::insert_full (1 samples, 1.64%)</title><rect x="44.2623%" y="469" width="1.6393%" height="15" fill="rgb(220,39,43)" fg:x="27" fg:w="1"/><text x="44.5123%" y="479.50"></text></g><g><title>_RNvMs1_NtNtCsge3pq5qjwfn_8indexmap3map4coreINtB5_12IndexMapCoreNtNtCs1pxsnI9ZQZP_9toml_edit15internal_string14InternalStringNtNtB13_5table13TableKeyValueE4pushB13_.llvm.14525446605815509770 (1 samples, 1.64%)</title><rect x="44.2623%" y="453" width="1.6393%" height="15" fill="rgb(229,68,48)" fg:x="27" fg:w="1"/><text x="44.5123%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawTable&lt;usize&gt;&gt;::insert::&lt;indexmap::map::core::get_hash&lt;toml_edit::internal_string::InternalString, toml_edit::table::TableKeyValue&gt;::{closure#0}&gt; (1 samples, 1.64%)</title><rect x="44.2623%" y="437" width="1.6393%" height="15" fill="rgb(252,8,32)" fg:x="27" fg:w="1"/><text x="44.5123%" y="447.50"></text></g><g><title>_RINvMs5_NtNtCse9xz27lMELz_9hashbrown3raw5innerINtB6_8RawTablejE14reserve_rehashNCINvNtNtCsge3pq5qjwfn_8indexmap3map4core8get_hashNtNtCs1pxsnI9ZQZP_9toml_edit15internal_string14InternalStringNtNtB27_5table13TableKeyValueE0EB27_.llvm.15497506250267442017 (1 samples, 1.64%)</title><rect x="44.2623%" y="421" width="1.6393%" height="15" fill="rgb(223,20,43)" fg:x="27" fg:w="1"/><text x="44.5123%" y="431.50"></text></g><g><title>__GI___libc_malloc (1 samples, 1.64%)</title><rect x="44.2623%" y="405" width="1.6393%" height="15" fill="rgb(229,81,49)" fg:x="27" fg:w="1"/><text x="44.5123%" y="415.50"></text></g><g><title>_int_malloc (1 samples, 1.64%)</title><rect x="44.2623%" y="389" width="1.6393%" height="15" fill="rgb(236,28,36)" fg:x="27" fg:w="1"/><text x="44.5123%" y="399.50"></text></g><g><title>[unknown] (26 samples, 42.62%)</title><rect x="4.9180%" y="629" width="42.6230%" height="15" fill="rgb(249,185,26)" fg:x="3" fg:w="26"/><text x="5.1680%" y="639.50">[unknown]</text></g><g><title>std::rt::lang_start_internal (1 samples, 1.64%)</title><rect x="45.9016%" y="613" width="1.6393%" height="15" fill="rgb(249,174,33)" fg:x="28" fg:w="1"/><text x="46.1516%" y="623.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 1.64%)</title><rect x="45.9016%" y="597" width="1.6393%" height="15" fill="rgb(233,201,37)" fg:x="28" fg:w="1"/><text x="46.1516%" y="607.50"></text></g><g><title>std::panicking::try (1 samples, 1.64%)</title><rect x="45.9016%" y="581" width="1.6393%" height="15" fill="rgb(221,78,26)" fg:x="28" fg:w="1"/><text x="46.1516%" y="591.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 1.64%)</title><rect x="45.9016%" y="565" width="1.6393%" height="15" fill="rgb(250,127,30)" fg:x="28" fg:w="1"/><text x="46.1516%" y="575.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (1 samples, 1.64%)</title><rect x="45.9016%" y="549" width="1.6393%" height="15" fill="rgb(230,49,44)" fg:x="28" fg:w="1"/><text x="46.1516%" y="559.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 1.64%)</title><rect x="45.9016%" y="533" width="1.6393%" height="15" fill="rgb(229,67,23)" fg:x="28" fg:w="1"/><text x="46.1516%" y="543.50"></text></g><g><title>std::panicking::try (1 samples, 1.64%)</title><rect x="45.9016%" y="517" width="1.6393%" height="15" fill="rgb(249,83,47)" fg:x="28" fg:w="1"/><text x="46.1516%" y="527.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 1.64%)</title><rect x="45.9016%" y="501" width="1.6393%" height="15" fill="rgb(215,43,3)" fg:x="28" fg:w="1"/><text x="46.1516%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 1.64%)</title><rect x="45.9016%" y="485" width="1.6393%" height="15" fill="rgb(238,154,13)" fg:x="28" fg:w="1"/><text x="46.1516%" y="495.50"></text></g><g><title>_RNCINvNtCshCtCELAt55q_3std2rt10lang_startuE0Csbl5Lf1v2mf0_5cargo.llvm.11395638753260183166 (1 samples, 1.64%)</title><rect x="45.9016%" y="469" width="1.6393%" height="15" fill="rgb(219,56,2)" fg:x="28" fg:w="1"/><text x="46.1516%" y="479.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;fn(), ()&gt; (1 samples, 1.64%)</title><rect x="45.9016%" y="453" width="1.6393%" height="15" fill="rgb(233,0,4)" fg:x="28" fg:w="1"/><text x="46.1516%" y="463.50"></text></g><g><title>cargo::main (1 samples, 1.64%)</title><rect x="45.9016%" y="437" width="1.6393%" height="15" fill="rgb(235,30,7)" fg:x="28" fg:w="1"/><text x="46.1516%" y="447.50"></text></g><g><title>cargo::cli::main (1 samples, 1.64%)</title><rect x="45.9016%" y="421" width="1.6393%" height="15" fill="rgb(250,79,13)" fg:x="28" fg:w="1"/><text x="46.1516%" y="431.50"></text></g><g><title>cargo::init_git_transports (1 samples, 1.64%)</title><rect x="45.9016%" y="405" width="1.6393%" height="15" fill="rgb(211,146,34)" fg:x="28" fg:w="1"/><text x="46.1516%" y="415.50"></text></g><g><title>cargo::ops::registry::needs_custom_http_transport (1 samples, 1.64%)</title><rect x="45.9016%" y="389" width="1.6393%" height="15" fill="rgb(228,22,38)" fg:x="28" fg:w="1"/><text x="46.1516%" y="399.50"></text></g><g><title>cargo::ops::registry::http_proxy (1 samples, 1.64%)</title><rect x="45.9016%" y="373" width="1.6393%" height="15" fill="rgb(235,168,5)" fg:x="28" fg:w="1"/><text x="46.1516%" y="383.50"></text></g><g><title>&lt;git2::config::Config&gt;::open_default (1 samples, 1.64%)</title><rect x="45.9016%" y="357" width="1.6393%" height="15" fill="rgb(221,155,16)" fg:x="28" fg:w="1"/><text x="46.1516%" y="367.50"></text></g><g><title>libgit2_sys::init (1 samples, 1.64%)</title><rect x="45.9016%" y="341" width="1.6393%" height="15" fill="rgb(215,215,53)" fg:x="28" fg:w="1"/><text x="46.1516%" y="351.50"></text></g><g><title>std::sync::once::Once::call_inner (1 samples, 1.64%)</title><rect x="45.9016%" y="325" width="1.6393%" height="15" fill="rgb(223,4,10)" fg:x="28" fg:w="1"/><text x="46.1516%" y="335.50"></text></g><g><title>_RNCINvMs2_NtNtCshCtCELAt55q_3std4sync4onceNtB8_4Once9call_onceNCNvCs9asE2bDfKf0_11libgit2_sys4init0E0B12_.llvm.17586149280116754225 (1 samples, 1.64%)</title><rect x="45.9016%" y="309" width="1.6393%" height="15" fill="rgb(234,103,6)" fg:x="28" fg:w="1"/><text x="46.1516%" y="319.50"></text></g><g><title>git_runtime_init (1 samples, 1.64%)</title><rect x="45.9016%" y="293" width="1.6393%" height="15" fill="rgb(227,97,0)" fg:x="28" fg:w="1"/><text x="46.1516%" y="303.50"></text></g><g><title>git_openssl_stream_global_init (1 samples, 1.64%)</title><rect x="45.9016%" y="277" width="1.6393%" height="15" fill="rgb(234,150,53)" fg:x="28" fg:w="1"/><text x="46.1516%" y="287.50"></text></g><g><title>X509_STORE_set_default_paths (1 samples, 1.64%)</title><rect x="45.9016%" y="261" width="1.6393%" height="15" fill="rgb(228,201,54)" fg:x="28" fg:w="1"/><text x="46.1516%" y="271.50"></text></g><g><title>by_file_ctrl (1 samples, 1.64%)</title><rect x="45.9016%" y="245" width="1.6393%" height="15" fill="rgb(222,22,37)" fg:x="28" fg:w="1"/><text x="46.1516%" y="255.50"></text></g><g><title>X509_load_cert_crl_file (1 samples, 1.64%)</title><rect x="45.9016%" y="229" width="1.6393%" height="15" fill="rgb(237,53,32)" fg:x="28" fg:w="1"/><text x="46.1516%" y="239.50"></text></g><g><title>PEM_X509_INFO_read_bio (1 samples, 1.64%)</title><rect x="45.9016%" y="213" width="1.6393%" height="15" fill="rgb(233,25,53)" fg:x="28" fg:w="1"/><text x="46.1516%" y="223.50"></text></g><g><title>ASN1_item_d2i (1 samples, 1.64%)</title><rect x="45.9016%" y="197" width="1.6393%" height="15" fill="rgb(210,40,34)" fg:x="28" fg:w="1"/><text x="46.1516%" y="207.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 1.64%)</title><rect x="45.9016%" y="181" width="1.6393%" height="15" fill="rgb(241,220,44)" fg:x="28" fg:w="1"/><text x="46.1516%" y="191.50"></text></g><g><title>asn1_template_noexp_d2i (1 samples, 1.64%)</title><rect x="45.9016%" y="165" width="1.6393%" height="15" fill="rgb(235,28,35)" fg:x="28" fg:w="1"/><text x="46.1516%" y="175.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 1.64%)</title><rect x="45.9016%" y="149" width="1.6393%" height="15" fill="rgb(210,56,17)" fg:x="28" fg:w="1"/><text x="46.1516%" y="159.50"></text></g><g><title>asn1_template_noexp_d2i (1 samples, 1.64%)</title><rect x="45.9016%" y="133" width="1.6393%" height="15" fill="rgb(224,130,29)" fg:x="28" fg:w="1"/><text x="46.1516%" y="143.50"></text></g><g><title>x509_name_ex_d2i (1 samples, 1.64%)</title><rect x="45.9016%" y="117" width="1.6393%" height="15" fill="rgb(235,212,8)" fg:x="28" fg:w="1"/><text x="46.1516%" y="127.50"></text></g><g><title>x509_name_canon (1 samples, 1.64%)</title><rect x="45.9016%" y="101" width="1.6393%" height="15" fill="rgb(223,33,50)" fg:x="28" fg:w="1"/><text x="46.1516%" y="111.50"></text></g><g><title>asn1_template_ex_i2d (1 samples, 1.64%)</title><rect x="45.9016%" y="85" width="1.6393%" height="15" fill="rgb(219,149,13)" fg:x="28" fg:w="1"/><text x="46.1516%" y="95.50"></text></g><g><title>ASN1_item_ex_i2d (1 samples, 1.64%)</title><rect x="45.9016%" y="69" width="1.6393%" height="15" fill="rgb(250,156,29)" fg:x="28" fg:w="1"/><text x="46.1516%" y="79.50"></text></g><g><title>asn1_template_ex_i2d (1 samples, 1.64%)</title><rect x="45.9016%" y="53" width="1.6393%" height="15" fill="rgb(216,193,19)" fg:x="28" fg:w="1"/><text x="46.1516%" y="63.50"></text></g><g><title>asn1_i2d_ex_primitive (1 samples, 1.64%)</title><rect x="45.9016%" y="37" width="1.6393%" height="15" fill="rgb(216,135,14)" fg:x="28" fg:w="1"/><text x="46.1516%" y="47.50"></text></g><g><title>cargo (30 samples, 49.18%)</title><rect x="0.0000%" y="645" width="49.1803%" height="15" fill="rgb(241,47,5)" fg:x="0" fg:w="30"/><text x="0.2500%" y="655.50">cargo</text></g><g><title>_start (1 samples, 1.64%)</title><rect x="47.5410%" y="629" width="1.6393%" height="15" fill="rgb(233,42,35)" fg:x="29" fg:w="1"/><text x="47.7910%" y="639.50"></text></g><g><title>_dl_start (1 samples, 1.64%)</title><rect x="47.5410%" y="613" width="1.6393%" height="15" fill="rgb(231,13,6)" fg:x="29" fg:w="1"/><text x="47.7910%" y="623.50"></text></g><g><title>_dl_sysdep_start (1 samples, 1.64%)</title><rect x="47.5410%" y="597" width="1.6393%" height="15" fill="rgb(207,181,40)" fg:x="29" fg:w="1"/><text x="47.7910%" y="607.50"></text></g><g><title>dl_main (1 samples, 1.64%)</title><rect x="47.5410%" y="581" width="1.6393%" height="15" fill="rgb(254,173,49)" fg:x="29" fg:w="1"/><text x="47.7910%" y="591.50"></text></g><g><title>_dl_map_object_deps (1 samples, 1.64%)</title><rect x="47.5410%" y="565" width="1.6393%" height="15" fill="rgb(221,1,38)" fg:x="29" fg:w="1"/><text x="47.7910%" y="575.50"></text></g><g><title>_dl_catch_exception (1 samples, 1.64%)</title><rect x="47.5410%" y="549" width="1.6393%" height="15" fill="rgb(206,124,46)" fg:x="29" fg:w="1"/><text x="47.7910%" y="559.50"></text></g><g><title>openaux (1 samples, 1.64%)</title><rect x="47.5410%" y="533" width="1.6393%" height="15" fill="rgb(249,21,11)" fg:x="29" fg:w="1"/><text x="47.7910%" y="543.50"></text></g><g><title>_dl_map_object (1 samples, 1.64%)</title><rect x="47.5410%" y="517" width="1.6393%" height="15" fill="rgb(222,201,40)" fg:x="29" fg:w="1"/><text x="47.7910%" y="527.50"></text></g><g><title>_dl_load_cache_lookup (1 samples, 1.64%)</title><rect x="47.5410%" y="501" width="1.6393%" height="15" fill="rgb(235,61,29)" fg:x="29" fg:w="1"/><text x="47.7910%" y="511.50"></text></g><g><title>search_cache (1 samples, 1.64%)</title><rect x="47.5410%" y="485" width="1.6393%" height="15" fill="rgb(219,207,3)" fg:x="29" fg:w="1"/><text x="47.7910%" y="495.50"></text></g><g><title>_dl_cache_libcmp (1 samples, 1.64%)</title><rect x="47.5410%" y="469" width="1.6393%" height="15" fill="rgb(222,56,46)" fg:x="29" fg:w="1"/><text x="47.7910%" y="479.50"></text></g><g><title>[gnuplot] (1 samples, 1.64%)</title><rect x="49.1803%" y="629" width="1.6393%" height="15" fill="rgb(239,76,54)" fg:x="30" fg:w="1"/><text x="49.4303%" y="639.50"></text></g><g><title>__libc_start_main_alias_2 (1 samples, 1.64%)</title><rect x="49.1803%" y="613" width="1.6393%" height="15" fill="rgb(231,124,27)" fg:x="30" fg:w="1"/><text x="49.4303%" y="623.50"></text></g><g><title>__libc_start_call_main (1 samples, 1.64%)</title><rect x="49.1803%" y="597" width="1.6393%" height="15" fill="rgb(249,195,6)" fg:x="30" fg:w="1"/><text x="49.4303%" y="607.50"></text></g><g><title>__GI_exit (1 samples, 1.64%)</title><rect x="49.1803%" y="581" width="1.6393%" height="15" fill="rgb(237,174,47)" fg:x="30" fg:w="1"/><text x="49.4303%" y="591.50"></text></g><g><title>__run_exit_handlers (1 samples, 1.64%)</title><rect x="49.1803%" y="565" width="1.6393%" height="15" fill="rgb(206,201,31)" fg:x="30" fg:w="1"/><text x="49.4303%" y="575.50"></text></g><g><title>_dl_fini (1 samples, 1.64%)</title><rect x="49.1803%" y="549" width="1.6393%" height="15" fill="rgb(231,57,52)" fg:x="30" fg:w="1"/><text x="49.4303%" y="559.50"></text></g><g><title>[libfontconfig.so.1.13.0] (1 samples, 1.64%)</title><rect x="49.1803%" y="533" width="1.6393%" height="15" fill="rgb(248,177,22)" fg:x="30" fg:w="1"/><text x="49.4303%" y="543.50"></text></g><g><title>__cxa_finalize (1 samples, 1.64%)</title><rect x="49.1803%" y="517" width="1.6393%" height="15" fill="rgb(215,211,37)" fg:x="30" fg:w="1"/><text x="49.4303%" y="527.50"></text></g><g><title>[libheif.so.1.12.0] (1 samples, 1.64%)</title><rect x="50.8197%" y="581" width="1.6393%" height="15" fill="rgb(241,128,51)" fg:x="31" fg:w="1"/><text x="51.0697%" y="591.50"></text></g><g><title>[libheif.so.1.12.0] (1 samples, 1.64%)</title><rect x="50.8197%" y="565" width="1.6393%" height="15" fill="rgb(227,165,31)" fg:x="31" fg:w="1"/><text x="51.0697%" y="575.50"></text></g><g><title>de265_init (1 samples, 1.64%)</title><rect x="50.8197%" y="549" width="1.6393%" height="15" fill="rgb(228,167,24)" fg:x="31" fg:w="1"/><text x="51.0697%" y="559.50"></text></g><g><title>init_scan_orders (1 samples, 1.64%)</title><rect x="50.8197%" y="533" width="1.6393%" height="15" fill="rgb(228,143,12)" fg:x="31" fg:w="1"/><text x="51.0697%" y="543.50"></text></g><g><title>_dl_start_user (2 samples, 3.28%)</title><rect x="50.8197%" y="629" width="3.2787%" height="15" fill="rgb(249,149,8)" fg:x="31" fg:w="2"/><text x="51.0697%" y="639.50">_dl..</text></g><g><title>_dl_init (2 samples, 3.28%)</title><rect x="50.8197%" y="613" width="3.2787%" height="15" fill="rgb(243,35,44)" fg:x="31" fg:w="2"/><text x="51.0697%" y="623.50">_dl..</text></g><g><title>call_init (2 samples, 3.28%)</title><rect x="50.8197%" y="597" width="3.2787%" height="15" fill="rgb(246,89,9)" fg:x="31" fg:w="2"/><text x="51.0697%" y="607.50">cal..</text></g><g><title>wxAppConsoleBase::OnUnhandledException (1 samples, 1.64%)</title><rect x="52.4590%" y="581" width="1.6393%" height="15" fill="rgb(233,213,13)" fg:x="32" fg:w="1"/><text x="52.7090%" y="591.50"></text></g><g><title>wxGet_wxConvLocalPtr (1 samples, 1.64%)</title><rect x="52.4590%" y="565" width="1.6393%" height="15" fill="rgb(233,141,41)" fg:x="32" fg:w="1"/><text x="52.7090%" y="575.50"></text></g><g><title>wxCSConv::wxCSConv (1 samples, 1.64%)</title><rect x="52.4590%" y="549" width="1.6393%" height="15" fill="rgb(239,167,4)" fg:x="32" fg:w="1"/><text x="52.7090%" y="559.50"></text></g><g><title>wxCSConv::DoCreate (1 samples, 1.64%)</title><rect x="52.4590%" y="533" width="1.6393%" height="15" fill="rgb(209,217,16)" fg:x="32" fg:w="1"/><text x="52.7090%" y="543.50"></text></g><g><title>wxBufferedInputStream::SeekI (1 samples, 1.64%)</title><rect x="52.4590%" y="517" width="1.6393%" height="15" fill="rgb(219,88,35)" fg:x="32" fg:w="1"/><text x="52.7090%" y="527.50"></text></g><g><title>iconv_open (1 samples, 1.64%)</title><rect x="52.4590%" y="501" width="1.6393%" height="15" fill="rgb(220,193,23)" fg:x="32" fg:w="1"/><text x="52.7090%" y="511.50"></text></g><g><title>__GI___gconv_open (1 samples, 1.64%)</title><rect x="52.4590%" y="485" width="1.6393%" height="15" fill="rgb(230,90,52)" fg:x="32" fg:w="1"/><text x="52.7090%" y="495.50"></text></g><g><title>__gconv_find_transform (1 samples, 1.64%)</title><rect x="52.4590%" y="469" width="1.6393%" height="15" fill="rgb(252,106,19)" fg:x="32" fg:w="1"/><text x="52.7090%" y="479.50"></text></g><g><title>__pthread_once_slow (1 samples, 1.64%)</title><rect x="52.4590%" y="453" width="1.6393%" height="15" fill="rgb(206,74,20)" fg:x="32" fg:w="1"/><text x="52.7090%" y="463.50"></text></g><g><title>__gconv_read_conf (1 samples, 1.64%)</title><rect x="52.4590%" y="437" width="1.6393%" height="15" fill="rgb(230,138,44)" fg:x="32" fg:w="1"/><text x="52.7090%" y="447.50"></text></g><g><title>read_conf_file.isra.0 (1 samples, 1.64%)</title><rect x="52.4590%" y="421" width="1.6393%" height="15" fill="rgb(235,182,43)" fg:x="32" fg:w="1"/><text x="52.7090%" y="431.50"></text></g><g><title>add_module (1 samples, 1.64%)</title><rect x="52.4590%" y="405" width="1.6393%" height="15" fill="rgb(242,16,51)" fg:x="32" fg:w="1"/><text x="52.7090%" y="415.50"></text></g><g><title>insert_module (1 samples, 1.64%)</title><rect x="52.4590%" y="389" width="1.6393%" height="15" fill="rgb(248,9,4)" fg:x="32" fg:w="1"/><text x="52.7090%" y="399.50"></text></g><g><title>__strcmp_avx2 (1 samples, 1.64%)</title><rect x="52.4590%" y="373" width="1.6393%" height="15" fill="rgb(210,31,22)" fg:x="32" fg:w="1"/><text x="52.7090%" y="383.50"></text></g><g><title>_dl_map_object_deps (1 samples, 1.64%)</title><rect x="54.0984%" y="565" width="1.6393%" height="15" fill="rgb(239,54,39)" fg:x="33" fg:w="1"/><text x="54.3484%" y="575.50"></text></g><g><title>_dl_catch_exception (1 samples, 1.64%)</title><rect x="54.0984%" y="549" width="1.6393%" height="15" fill="rgb(230,99,41)" fg:x="33" fg:w="1"/><text x="54.3484%" y="559.50"></text></g><g><title>openaux (1 samples, 1.64%)</title><rect x="54.0984%" y="533" width="1.6393%" height="15" fill="rgb(253,106,12)" fg:x="33" fg:w="1"/><text x="54.3484%" y="543.50"></text></g><g><title>_dl_map_object (1 samples, 1.64%)</title><rect x="54.0984%" y="517" width="1.6393%" height="15" fill="rgb(213,46,41)" fg:x="33" fg:w="1"/><text x="54.3484%" y="527.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 1.64%)</title><rect x="54.0984%" y="501" width="1.6393%" height="15" fill="rgb(215,133,35)" fg:x="33" fg:w="1"/><text x="54.3484%" y="511.50"></text></g><g><title>gnuplot (12 samples, 19.67%)</title><rect x="49.1803%" y="645" width="19.6721%" height="15" fill="rgb(213,28,5)" fg:x="30" fg:w="12"/><text x="49.4303%" y="655.50">gnuplot</text></g><g><title>_start (9 samples, 14.75%)</title><rect x="54.0984%" y="629" width="14.7541%" height="15" fill="rgb(215,77,49)" fg:x="33" fg:w="9"/><text x="54.3484%" y="639.50">_start</text></g><g><title>_dl_start (9 samples, 14.75%)</title><rect x="54.0984%" y="613" width="14.7541%" height="15" fill="rgb(248,100,22)" fg:x="33" fg:w="9"/><text x="54.3484%" y="623.50">_dl_start</text></g><g><title>_dl_sysdep_start (9 samples, 14.75%)</title><rect x="54.0984%" y="597" width="14.7541%" height="15" fill="rgb(208,67,9)" fg:x="33" fg:w="9"/><text x="54.3484%" y="607.50">_dl_sysdep_start</text></g><g><title>dl_main (9 samples, 14.75%)</title><rect x="54.0984%" y="581" width="14.7541%" height="15" fill="rgb(219,133,21)" fg:x="33" fg:w="9"/><text x="54.3484%" y="591.50">dl_main</text></g><g><title>_dl_relocate_object (8 samples, 13.11%)</title><rect x="55.7377%" y="565" width="13.1148%" height="15" fill="rgb(246,46,29)" fg:x="34" fg:w="8"/><text x="55.9877%" y="575.50">_dl_relocate_object</text></g><g><title>_dl_lookup_symbol_x (6 samples, 9.84%)</title><rect x="59.0164%" y="549" width="9.8361%" height="15" fill="rgb(246,185,52)" fg:x="36" fg:w="6"/><text x="59.2664%" y="559.50">_dl_lookup_sym..</text></g><g><title>do_lookup_x (5 samples, 8.20%)</title><rect x="60.6557%" y="533" width="8.1967%" height="15" fill="rgb(252,136,11)" fg:x="37" fg:w="5"/><text x="60.9057%" y="543.50">do_lookup_x</text></g><g><title>check_match (1 samples, 1.64%)</title><rect x="67.2131%" y="517" width="1.6393%" height="15" fill="rgb(219,138,53)" fg:x="41" fg:w="1"/><text x="67.4631%" y="527.50"></text></g><g><title>strcmp (1 samples, 1.64%)</title><rect x="67.2131%" y="501" width="1.6393%" height="15" fill="rgb(211,51,23)" fg:x="41" fg:w="1"/><text x="67.4631%" y="511.50"></text></g><g><title>[unknown] (2 samples, 3.28%)</title><rect x="68.8525%" y="629" width="3.2787%" height="15" fill="rgb(247,221,28)" fg:x="42" fg:w="2"/><text x="69.1025%" y="639.50">[un..</text></g><g><title>__spawni_child (2 samples, 3.28%)</title><rect x="68.8525%" y="613" width="3.2787%" height="15" fill="rgb(251,222,45)" fg:x="42" fg:w="2"/><text x="69.1025%" y="623.50">__s..</text></g><g><title>__GI___libc_sigaction (2 samples, 3.28%)</title><rect x="68.8525%" y="597" width="3.2787%" height="15" fill="rgb(217,162,53)" fg:x="42" fg:w="2"/><text x="69.1025%" y="607.50">__G..</text></g><g><title>__GI___clone (10 samples, 16.39%)</title><rect x="72.1311%" y="629" width="16.3934%" height="15" fill="rgb(229,93,14)" fg:x="44" fg:w="10"/><text x="72.3811%" y="639.50">__GI___clone</text></g><g><title>__libc_start_main_alias_2 (1 samples, 1.64%)</title><rect x="96.7213%" y="613" width="1.6393%" height="15" fill="rgb(209,67,49)" fg:x="59" fg:w="1"/><text x="96.9713%" y="623.50"></text></g><g><title>__libc_start_call_main (1 samples, 1.64%)</title><rect x="96.7213%" y="597" width="1.6393%" height="15" fill="rgb(213,87,29)" fg:x="59" fg:w="1"/><text x="96.9713%" y="607.50"></text></g><g><title>main (1 samples, 1.64%)</title><rect x="96.7213%" y="581" width="1.6393%" height="15" fill="rgb(205,151,52)" fg:x="59" fg:w="1"/><text x="96.9713%" y="591.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 1.64%)</title><rect x="96.7213%" y="565" width="1.6393%" height="15" fill="rgb(253,215,39)" fg:x="59" fg:w="1"/><text x="96.9713%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 1.64%)</title><rect x="96.7213%" y="549" width="1.6393%" height="15" fill="rgb(221,220,41)" fg:x="59" fg:w="1"/><text x="96.9713%" y="559.50"></text></g><g><title>my_benchmark::main (1 samples, 1.64%)</title><rect x="96.7213%" y="533" width="1.6393%" height="15" fill="rgb(218,133,21)" fg:x="59" fg:w="1"/><text x="96.9713%" y="543.50"></text></g><g><title>my_benchmark::benches (1 samples, 1.64%)</title><rect x="96.7213%" y="517" width="1.6393%" height="15" fill="rgb(221,193,43)" fg:x="59" fg:w="1"/><text x="96.9713%" y="527.50"></text></g><g><title>&lt;criterion::Criterion as core::default::Default&gt;::default (1 samples, 1.64%)</title><rect x="96.7213%" y="501" width="1.6393%" height="15" fill="rgb(240,128,52)" fg:x="59" fg:w="1"/><text x="96.9713%" y="511.50"></text></g><g><title>&lt;criterion::DEFAULT_OUTPUT_DIRECTORY as core::ops::deref::Deref&gt;::deref (1 samples, 1.64%)</title><rect x="96.7213%" y="485" width="1.6393%" height="15" fill="rgb(253,114,12)" fg:x="59" fg:w="1"/><text x="96.9713%" y="495.50"></text></g><g><title>&lt;criterion::DEFAULT_OUTPUT_DIRECTORY as core::ops::deref::Deref&gt;::deref::__stability (1 samples, 1.64%)</title><rect x="96.7213%" y="469" width="1.6393%" height="15" fill="rgb(215,223,47)" fg:x="59" fg:w="1"/><text x="96.9713%" y="479.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (1 samples, 1.64%)</title><rect x="96.7213%" y="453" width="1.6393%" height="15" fill="rgb(248,225,23)" fg:x="59" fg:w="1"/><text x="96.9713%" y="463.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 1.64%)</title><rect x="96.7213%" y="437" width="1.6393%" height="15" fill="rgb(250,108,0)" fg:x="59" fg:w="1"/><text x="96.9713%" y="447.50"></text></g><g><title>std::sync::once::Once::call_inner (1 samples, 1.64%)</title><rect x="96.7213%" y="421" width="1.6393%" height="15" fill="rgb(228,208,7)" fg:x="59" fg:w="1"/><text x="96.9713%" y="431.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 1.64%)</title><rect x="96.7213%" y="405" width="1.6393%" height="15" fill="rgb(244,45,10)" fg:x="59" fg:w="1"/><text x="96.9713%" y="415.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get::{{closure}} (1 samples, 1.64%)</title><rect x="96.7213%" y="389" width="1.6393%" height="15" fill="rgb(207,125,25)" fg:x="59" fg:w="1"/><text x="96.9713%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 1.64%)</title><rect x="96.7213%" y="373" width="1.6393%" height="15" fill="rgb(210,195,18)" fg:x="59" fg:w="1"/><text x="96.9713%" y="383.50"></text></g><g><title>&lt;criterion::DEFAULT_OUTPUT_DIRECTORY as core::ops::deref::Deref&gt;::deref::__static_ref_initialize (1 samples, 1.64%)</title><rect x="96.7213%" y="357" width="1.6393%" height="15" fill="rgb(249,80,12)" fg:x="59" fg:w="1"/><text x="96.9713%" y="367.50"></text></g><g><title>criterion::cargo_target_directory (1 samples, 1.64%)</title><rect x="96.7213%" y="341" width="1.6393%" height="15" fill="rgb(221,65,9)" fg:x="59" fg:w="1"/><text x="96.9713%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 1.64%)</title><rect x="96.7213%" y="325" width="1.6393%" height="15" fill="rgb(235,49,36)" fg:x="59" fg:w="1"/><text x="96.9713%" y="335.50"></text></g><g><title>criterion::cargo_target_directory::{{closure}} (1 samples, 1.64%)</title><rect x="96.7213%" y="309" width="1.6393%" height="15" fill="rgb(225,32,20)" fg:x="59" fg:w="1"/><text x="96.9713%" y="319.50"></text></g><g><title>serde_json::de::from_slice (1 samples, 1.64%)</title><rect x="96.7213%" y="293" width="1.6393%" height="15" fill="rgb(215,141,46)" fg:x="59" fg:w="1"/><text x="96.9713%" y="303.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 1.64%)</title><rect x="96.7213%" y="277" width="1.6393%" height="15" fill="rgb(250,160,47)" fg:x="59" fg:w="1"/><text x="96.9713%" y="287.50"></text></g><g><title>criterion::cargo_target_directory::_::&lt;impl serde::de::Deserialize for criterion::cargo_target_directory::Metadata&gt;::deserialize (1 samples, 1.64%)</title><rect x="96.7213%" y="261" width="1.6393%" height="15" fill="rgb(216,222,40)" fg:x="59" fg:w="1"/><text x="96.9713%" y="271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 1.64%)</title><rect x="96.7213%" y="245" width="1.6393%" height="15" fill="rgb(234,217,39)" fg:x="59" fg:w="1"/><text x="96.9713%" y="255.50"></text></g><g><title>&lt;criterion::cargo_target_directory::_::&lt;impl serde::de::Deserialize for criterion::cargo_target_directory::Metadata&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 1.64%)</title><rect x="96.7213%" y="229" width="1.6393%" height="15" fill="rgb(207,178,40)" fg:x="59" fg:w="1"/><text x="96.9713%" y="239.50"></text></g><g><title>serde::de::MapAccess::next_value (1 samples, 1.64%)</title><rect x="96.7213%" y="213" width="1.6393%" height="15" fill="rgb(221,136,13)" fg:x="59" fg:w="1"/><text x="96.9713%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 1.64%)</title><rect x="96.7213%" y="197" width="1.6393%" height="15" fill="rgb(249,199,10)" fg:x="59" fg:w="1"/><text x="96.9713%" y="207.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 1.64%)</title><rect x="96.7213%" y="181" width="1.6393%" height="15" fill="rgb(249,222,13)" fg:x="59" fg:w="1"/><text x="96.9713%" y="191.50"></text></g><g><title>&lt;serde::de::ignored_any::IgnoredAny as serde::de::Deserialize&gt;::deserialize (1 samples, 1.64%)</title><rect x="96.7213%" y="165" width="1.6393%" height="15" fill="rgb(244,185,38)" fg:x="59" fg:w="1"/><text x="96.9713%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_ignored_any (1 samples, 1.64%)</title><rect x="96.7213%" y="149" width="1.6393%" height="15" fill="rgb(236,202,9)" fg:x="59" fg:w="1"/><text x="96.9713%" y="159.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::ignore_value (1 samples, 1.64%)</title><rect x="96.7213%" y="133" width="1.6393%" height="15" fill="rgb(250,229,37)" fg:x="59" fg:w="1"/><text x="96.9713%" y="143.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::ignore_str (1 samples, 1.64%)</title><rect x="96.7213%" y="117" width="1.6393%" height="15" fill="rgb(206,174,23)" fg:x="59" fg:w="1"/><text x="96.9713%" y="127.50"></text></g><g><title>all (61 samples, 100%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(211,33,43)" fg:x="0" fg:w="61"/><text x="0.2500%" y="671.50"></text></g><g><title>my_benchmark-9c (19 samples, 31.15%)</title><rect x="68.8525%" y="645" width="31.1475%" height="15" fill="rgb(245,58,50)" fg:x="42" fg:w="19"/><text x="69.1025%" y="655.50">my_benchmark-9c</text></g><g><title>_start (7 samples, 11.48%)</title><rect x="88.5246%" y="629" width="11.4754%" height="15" fill="rgb(244,68,36)" fg:x="54" fg:w="7"/><text x="88.7746%" y="639.50">_start</text></g><g><title>_dl_start (1 samples, 1.64%)</title><rect x="98.3607%" y="613" width="1.6393%" height="15" fill="rgb(232,229,15)" fg:x="60" fg:w="1"/><text x="98.6107%" y="623.50"></text></g><g><title>_dl_sysdep_start (1 samples, 1.64%)</title><rect x="98.3607%" y="597" width="1.6393%" height="15" fill="rgb(254,30,23)" fg:x="60" fg:w="1"/><text x="98.6107%" y="607.50"></text></g><g><title>dl_main (1 samples, 1.64%)</title><rect x="98.3607%" y="581" width="1.6393%" height="15" fill="rgb(235,160,14)" fg:x="60" fg:w="1"/><text x="98.6107%" y="591.50"></text></g></svg></svg>